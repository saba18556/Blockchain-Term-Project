{
	"id": "4140b335ae0b82a1740b7c8d3b848b28",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.13",
	"solcLongVersion": "0.8.13+commit.abaa5c0e",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Auction.sol": {
				"content": "pragma solidity >=0.5.0 <0.9.0;\r\n\r\ncontract Auction{\r\n    \r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Auction.sol": {
				"Auction": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Auction.sol\":35:61  contract Auction{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Auction.sol\":35:61  contract Auction{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220add1d0714e0379252d183bd1887ac8217c37213651d309c74980566a9a46d94364736f6c634300080d0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220add1d0714e0379252d183bd1887ac8217c37213651d309c74980566a9a46d94364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xD1 0xD0 PUSH18 0x4E0379252D183BD1887AC8217C37213651D3 MULMOD 0xC7 0x49 DUP1 JUMP PUSH11 0x9A46D94364736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "35:26:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220add1d0714e0379252d183bd1887ac8217c37213651d309c74980566a9a46d94364736f6c634300080d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAD 0xD1 0xD0 PUSH18 0x4E0379252D183BD1887AC8217C37213651D3 MULMOD 0xC7 0x49 DUP1 JUMP PUSH11 0x9A46D94364736F6C634300 ADDMOD 0xD STOP CALLER ",
							"sourceMap": "35:26:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 35,
									"end": 61,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 35,
									"end": 61,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220add1d0714e0379252d183bd1887ac8217c37213651d309c74980566a9a46d94364736f6c634300080d0033",
									".code": [
										{
											"begin": 35,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35,
											"end": 61,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35,
											"end": 61,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35,
											"end": 61,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"keccak256\":\"0x7c855482cde8274e5daaba843516675f7a5df379609b933cb042d329ec184bc8\",\"urls\":[\"bzz-raw://9d7904d643e01b3aed56dcdead94e57aea3ce7e0f67bf38fdd58f056c59ca4de\",\"dweb:/ipfs/Qmc9BB5KVPFoPbfsZjBNvQPLX31nmmC6dNiV5YNzRijuWW\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/Auction.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/Auction.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/Auction.sol": {
				"ast": {
					"absolutePath": "contracts/Auction.sol",
					"exportedSymbols": {
						"Auction": [
							2
						]
					},
					"id": 3,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Auction",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "Auction",
							"nameLocation": "44:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "35:26:0",
							"usedErrors": []
						}
					],
					"src": "0:61:0"
				},
				"id": 0
			}
		}
	}
}