{
	"id": "657bd76a6d18accb474505b0b4b65cb8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Auction.sol": {
				"content": "pragma solidity >=0.5.0 <0.9.0;\r\n\r\ncontract Auction{\r\n\r\n    // the one who starts the auction\r\n    address payable public owner;\r\n\r\n    // start time of the auction\r\n    uint public start_time;\r\n\r\n    // end time of the auction\r\n    uint public end_time;\r\n\r\n    // declaring state for the auction\r\n    enum state {Start, Running, End, Cancel}\r\n    state public auctionState;\r\n    \r\n    uint public highestBid;\r\n\r\n    // highest bid from the other participants\r\n    uint public highestBindingBid;\r\n\r\n    // increment of bids\r\n    uint public inc;\r\n\r\n    // highest bidder in the auction\r\n    address payable public highestBidder;\r\n\r\n    // storing values of bid against participant's addresses\r\n    mapping(address => uint) public bids;\r\n\r\n    constructor() public {\r\n\r\n        owner = msg.sender;\r\n\r\n        // on deployment state is set to Running\r\n        auctionState = state.Running;\r\n\r\n        // starts when contract is deployed\r\n        start_time = block.number;\r\n\r\n        // ends after a week\r\n        end_time = start_time + 604800;\r\n\r\n        // bid increment is by 0.5 ether\r\n        inc = 0.5 ether;\r\n    }\r\n\r\n    modifier notOwner(){\r\n        require(msg.sender != owner, \"owner cannot bid!\");\r\n        _;\r\n    }\r\n\r\n    modifier Owner(){\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier started(){\r\n        require(block.number>start_time);\r\n        _;\r\n    }\r\n\r\n    modifier ended(){\r\n        require(block.number<end_time);\r\n        _;\r\n    }\r\n\r\n    function cancelAuc() public Owner{\r\n\r\n        // pa\r\n        auctionState = state.Cancel;\r\n    }\r\n\r\n    function endAuc() public Owner{\r\n        auctionState = state.End;\r\n    }\r\n\r\n    function min(uint a, uint b) pure private returns(uint){\r\n        if (a<=b){\r\n            return a;\r\n        }\r\n        else{\r\n            return b;\r\n        }\r\n    }\r\n\r\n    function placeBid() payable public notOwner started{\r\n        \r\n        // owner cannot place a bid\r\n        // auction should be in a running state to place bid\r\n        require(auctionState == state.Running);\r\n\r\n        // the bid placed should be more than the increment declared i.e 1 ether\r\n        require(msg.value>1 ether);\r\n\r\n        // current bid will be stored by acquiring participant's amount plus bid increment\r\n        uint currentbid = bids[msg.sender] + inc;\r\n\r\n        // if current bid is greater than highest payable bid\r\n        require(currentbid > highestBindingBid);\r\n\r\n        // it will be added in the bids record against the participant's address\r\n        bids[msg.sender] = currentbid;\r\n\r\n\r\n        if(currentbid<bids[highestBidder]){\r\n            highestBindingBid = min(currentbid + inc, bids[highestBidder]);\r\n        }\r\n        else{\r\n            highestBindingBid = min(currentbid, bids[highestBidder] + inc);\r\n            highestBidder = msg.sender;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function withdraw() public{\r\n\r\n        require((auctionState == state.Cancel) ||(auctionState == state.End)|| (block.number > end_time));\r\n        require((msg.sender == owner) || (bids[msg.sender] > 0));\r\n\r\n        address payable person;\r\n        uint amount;\r\n\r\n        // if the auction gets cancelled all the amount will be send back to the bidders\r\n        if(auctionState == state.Cancel){\r\n            person = msg.sender;\r\n            amount = bids[msg.sender];\r\n        }\r\n\r\n        else{\r\n\r\n            // if the auction ends then owner will get the highet payable bid\r\n            if(msg.sender == owner){\r\n                person = owner;\r\n                amount = highestBindingBid;\r\n            }\r\n            else{\r\n\r\n                // if it's the highest bidder then it will get his remaining amount back\r\n                if(msg.sender == highestBidder){\r\n                    person = highestBidder;\r\n                    amount = bids[highestBidder] - highestBindingBid;              \r\n                }\r\n\r\n                // if the remaining bidders end it they will get their amounts back\r\n                else{\r\n                    person = msg.sender;\r\n                    amount = bids[msg.sender];\r\n                }\r\n            }\r\n        }\r\n\r\n        // the amount will be transferred to the relevant person\r\n        person.transfer(amount);\r\n\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Auction.sol": {
				"Auction": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "auctionState",
							"outputs": [
								{
									"internalType": "enum Auction.state",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bids",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "cancelAuc",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "endAuc",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "end_time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "highestBid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "highestBidder",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "highestBindingBid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "inc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "placeBid",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "start_time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Auction.sol\":35:4247  contract Auction{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Auction.sol\":743:1120  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Auction.sol\":743:1120  constructor() public {\r... */\n  pop\n    /* \"contracts/Auction.sol\":785:795  msg.sender */\n  caller\n    /* \"contracts/Auction.sol\":777:782  owner */\n  0x00\n  dup1\n    /* \"contracts/Auction.sol\":777:795  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":873:886  state.Running */\n  0x01\n    /* \"contracts/Auction.sol\":858:870  auctionState */\n  0x03\n  0x00\n    /* \"contracts/Auction.sol\":858:886  auctionState = state.Running */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  invalid\ntag_4:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":957:969  block.number */\n  number\n    /* \"contracts/Auction.sol\":944:954  start_time */\n  0x01\n    /* \"contracts/Auction.sol\":944:969  start_time = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":1036:1042  604800 */\n  0x093a80\n    /* \"contracts/Auction.sol\":1023:1033  start_time */\n  sload(0x01)\n    /* \"contracts/Auction.sol\":1023:1042  start_time + 604800 */\n  add\n    /* \"contracts/Auction.sol\":1012:1020  end_time */\n  0x02\n    /* \"contracts/Auction.sol\":1012:1042  end_time = start_time + 604800 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":1103:1112  0.5 ether */\n  0x06f05b59d3b20000\n    /* \"contracts/Auction.sol\":1097:1100  inc */\n  0x06\n    /* \"contracts/Auction.sol\":1097:1112  inc = 0.5 ether */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":35:4247  contract Auction{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Auction.sol\":35:4247  contract Auction{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7fb45099\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x91f90157\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x91f90157\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd57bde79\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xecfc7ecc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf5b56c56\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x7fb45099\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x834ee417\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_15:\n      dup1\n      0x16243356\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2352f320\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x371303c0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3fdceefd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x62ea82db\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Auction.sol\":233:253  uint public end_time */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"contracts/Auction.sol\":233:253  uint public end_time */\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":1492:1588  function cancelAuc() public Owner{\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"contracts/Auction.sol\":1492:1588  function cancelAuc() public Owner{\r... */\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/Auction.sol\":529:544  uint public inc */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"contracts/Auction.sol\":529:544  uint public inc */\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":2866:4242  function withdraw() public{\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_26:\n        /* \"contracts/Auction.sol\":2866:4242  function withdraw() public{\r... */\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/Auction.sol\":1596:1669  function endAuc() public Owner{\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_29:\n        /* \"contracts/Auction.sol\":1596:1669  function endAuc() public Owner{\r... */\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Auction.sol\":698:734  mapping(address => uint) public bids */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"contracts/Auction.sol\":698:734  mapping(address => uint) public bids */\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"contracts/Auction.sol\":698:734  mapping(address => uint) public bids */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":348:373  state public auctionState */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"contracts/Auction.sol\":348:373  state public auctionState */\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":170:192  uint public start_time */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"contracts/Auction.sol\":170:192  uint public start_time */\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":99:127  address payable public owner */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"contracts/Auction.sol\":99:127  address payable public owner */\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":591:627  address payable public highestBidder */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"contracts/Auction.sol\":591:627  address payable public highestBidder */\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":386:408  uint public highestBid */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"contracts/Auction.sol\":386:408  uint public highestBid */\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":1851:2858  function placeBid() payable public notOwner started{\r... */\n    tag_13:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/Auction.sol\":465:494  uint public highestBindingBid */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_54:\n        /* \"contracts/Auction.sol\":465:494  uint public highestBindingBid */\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":233:253  uint public end_time */\n    tag_19:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":1492:1588  function cancelAuc() public Owner{\r... */\n    tag_22:\n        /* \"contracts/Auction.sol\":1284:1289  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1270:1289  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1270:1280  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":1270:1289  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":1262:1290  require(msg.sender == owner) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"contracts/Auction.sol\":1568:1580  state.Cancel */\n      0x03\n        /* \"contracts/Auction.sol\":1553:1565  auctionState */\n      dup1\n      0x00\n        /* \"contracts/Auction.sol\":1553:1580  auctionState = state.Cancel */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_60\n      jumpi\n      invalid\n    tag_60:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":1492:1588  function cancelAuc() public Owner{\r... */\n      jump\t// out\n        /* \"contracts/Auction.sol\":529:544  uint public inc */\n    tag_25:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":2866:4242  function withdraw() public{\r... */\n    tag_28:\n        /* \"contracts/Auction.sol\":2930:2942  state.Cancel */\n      0x03\n        /* \"contracts/Auction.sol\":2914:2942  auctionState == state.Cancel */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n        /* \"contracts/Auction.sol\":2914:2926  auctionState */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auction.sol\":2914:2942  auctionState == state.Cancel */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      invalid\n    tag_63:\n      eq\n        /* \"contracts/Auction.sol\":2913:2973  (auctionState == state.Cancel) ||(auctionState == state.End) */\n      dup1\n      tag_64\n      jumpi\n      pop\n        /* \"contracts/Auction.sol\":2963:2972  state.End */\n      0x02\n        /* \"contracts/Auction.sol\":2947:2972  auctionState == state.End */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      invalid\n    tag_65:\n        /* \"contracts/Auction.sol\":2947:2959  auctionState */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auction.sol\":2947:2972  auctionState == state.End */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      invalid\n    tag_66:\n      eq\n        /* \"contracts/Auction.sol\":2913:2973  (auctionState == state.Cancel) ||(auctionState == state.End) */\n    tag_64:\n        /* \"contracts/Auction.sol\":2913:3001  (auctionState == state.Cancel) ||(auctionState == state.End)|| (block.number > end_time) */\n      dup1\n      tag_67\n      jumpi\n      pop\n        /* \"contracts/Auction.sol\":2992:3000  end_time */\n      sload(0x02)\n        /* \"contracts/Auction.sol\":2977:2989  block.number */\n      number\n        /* \"contracts/Auction.sol\":2977:3000  block.number > end_time */\n      gt\n        /* \"contracts/Auction.sol\":2913:3001  (auctionState == state.Cancel) ||(auctionState == state.End)|| (block.number > end_time) */\n    tag_67:\n        /* \"contracts/Auction.sol\":2905:3002  require((auctionState == state.Cancel) ||(auctionState == state.End)|| (block.number > end_time)) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"contracts/Auction.sol\":3036:3041  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3022:3041  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3022:3032  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3022:3041  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":3021:3068  (msg.sender == owner) || (bids[msg.sender] > 0) */\n      dup1\n      tag_69\n      jumpi\n      pop\n        /* \"contracts/Auction.sol\":3066:3067  0 */\n      0x00\n        /* \"contracts/Auction.sol\":3047:3051  bids */\n      0x08\n        /* \"contracts/Auction.sol\":3047:3063  bids[msg.sender] */\n      0x00\n        /* \"contracts/Auction.sol\":3052:3062  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3047:3063  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":3047:3067  bids[msg.sender] > 0 */\n      gt\n        /* \"contracts/Auction.sol\":3021:3068  (msg.sender == owner) || (bids[msg.sender] > 0) */\n    tag_69:\n        /* \"contracts/Auction.sol\":3013:3069  require((msg.sender == owner) || (bids[msg.sender] > 0)) */\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n        /* \"contracts/Auction.sol\":3082:3104  address payable person */\n      0x00\n        /* \"contracts/Auction.sol\":3115:3126  uint amount */\n      dup1\n        /* \"contracts/Auction.sol\":3248:3260  state.Cancel */\n      0x03\n        /* \"contracts/Auction.sol\":3232:3260  auctionState == state.Cancel */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_71\n      jumpi\n      invalid\n    tag_71:\n        /* \"contracts/Auction.sol\":3232:3244  auctionState */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auction.sol\":3232:3260  auctionState == state.Cancel */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_72\n      jumpi\n      invalid\n    tag_72:\n      eq\n        /* \"contracts/Auction.sol\":3229:4131  if(auctionState == state.Cancel){\r... */\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/Auction.sol\":3285:3295  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3276:3295  person = msg.sender */\n      swap2\n      pop\n        /* \"contracts/Auction.sol\":3319:3323  bids */\n      0x08\n        /* \"contracts/Auction.sol\":3319:3335  bids[msg.sender] */\n      0x00\n        /* \"contracts/Auction.sol\":3324:3334  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3319:3335  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":3310:3335  amount = bids[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":3229:4131  if(auctionState == state.Cancel){\r... */\n      jump(tag_74)\n    tag_73:\n        /* \"contracts/Auction.sol\":3476:3481  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3462:3481  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3462:3472  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3462:3481  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":3459:4120  if(msg.sender == owner){\r... */\n      iszero\n      tag_75\n      jumpi\n        /* \"contracts/Auction.sol\":3510:3515  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3501:3515  person = owner */\n      swap2\n      pop\n        /* \"contracts/Auction.sol\":3543:3560  highestBindingBid */\n      sload(0x05)\n        /* \"contracts/Auction.sol\":3534:3560  amount = highestBindingBid */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":3459:4120  if(msg.sender == owner){\r... */\n      jump(tag_76)\n    tag_75:\n        /* \"contracts/Auction.sol\":3722:3735  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3708:3735  msg.sender == highestBidder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3708:3718  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3708:3735  msg.sender == highestBidder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":3705:4105  if(msg.sender == highestBidder){\r... */\n      iszero\n      tag_77\n      jumpi\n        /* \"contracts/Auction.sol\":3768:3781  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3759:3781  person = highestBidder */\n      swap2\n      pop\n        /* \"contracts/Auction.sol\":3835:3852  highestBindingBid */\n      sload(0x05)\n        /* \"contracts/Auction.sol\":3813:3817  bids */\n      0x08\n        /* \"contracts/Auction.sol\":3813:3832  bids[highestBidder] */\n      0x00\n        /* \"contracts/Auction.sol\":3818:3831  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3813:3832  bids[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":3813:3852  bids[highestBidder] - highestBindingBid */\n      sub\n        /* \"contracts/Auction.sol\":3804:3852  amount = bids[highestBidder] - highestBindingBid */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":3705:4105  if(msg.sender == highestBidder){\r... */\n      jump(tag_78)\n    tag_77:\n        /* \"contracts/Auction.sol\":4027:4037  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":4018:4037  person = msg.sender */\n      swap2\n      pop\n        /* \"contracts/Auction.sol\":4069:4073  bids */\n      0x08\n        /* \"contracts/Auction.sol\":4069:4085  bids[msg.sender] */\n      0x00\n        /* \"contracts/Auction.sol\":4074:4084  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":4069:4085  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":4060:4085  amount = bids[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":3705:4105  if(msg.sender == highestBidder){\r... */\n    tag_78:\n        /* \"contracts/Auction.sol\":3459:4120  if(msg.sender == owner){\r... */\n    tag_76:\n        /* \"contracts/Auction.sol\":3229:4131  if(auctionState == state.Cancel){\r... */\n    tag_74:\n        /* \"contracts/Auction.sol\":4209:4215  person */\n      dup2\n        /* \"contracts/Auction.sol\":4209:4224  person.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":4209:4232  person.transfer(amount) */\n      0x08fc\n        /* \"contracts/Auction.sol\":4225:4231  amount */\n      dup3\n        /* \"contracts/Auction.sol\":4209:4232  person.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_79:\n        /* \"contracts/Auction.sol\":4209:4232  person.transfer(amount) */\n      pop\n        /* \"contracts/Auction.sol\":2866:4242  function withdraw() public{\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Auction.sol\":1596:1669  function endAuc() public Owner{\r... */\n    tag_31:\n        /* \"contracts/Auction.sol\":1284:1289  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1270:1289  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1270:1280  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":1270:1289  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":1262:1290  require(msg.sender == owner) */\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n        /* \"contracts/Auction.sol\":1652:1661  state.End */\n      0x02\n        /* \"contracts/Auction.sol\":1637:1649  auctionState */\n      0x03\n      0x00\n        /* \"contracts/Auction.sol\":1637:1661  auctionState = state.End */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":1596:1669  function endAuc() public Owner{\r... */\n      jump\t// out\n        /* \"contracts/Auction.sol\":698:734  mapping(address => uint) public bids */\n    tag_35:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":348:373  state public auctionState */\n    tag_38:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":170:192  uint public start_time */\n    tag_42:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":99:127  address payable public owner */\n    tag_45:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":591:627  address payable public highestBidder */\n    tag_48:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":386:408  uint public highestBid */\n    tag_51:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":1851:2858  function placeBid() payable public notOwner started{\r... */\n    tag_53:\n        /* \"contracts/Auction.sol\":1180:1185  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1166:1185  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1166:1176  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":1166:1185  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Auction.sol\":1158:1207  require(msg.sender != owner, \"owner cannot bid!\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x11\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      0x6f776e65722063616e6e6f742062696421000000000000000000000000000000\n      dup2\n      mstore\n      pop\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/Auction.sol\":1368:1378  start_time */\n      sload(0x01)\n        /* \"contracts/Auction.sol\":1355:1367  block.number */\n      number\n        /* \"contracts/Auction.sol\":1355:1378  block.number>start_time */\n      gt\n        /* \"contracts/Auction.sol\":1347:1379  require(block.number>start_time) */\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n        /* \"contracts/Auction.sol\":2046:2059  state.Running */\n      0x01\n        /* \"contracts/Auction.sol\":2030:2059  auctionState == state.Running */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_89\n      jumpi\n      invalid\n    tag_89:\n        /* \"contracts/Auction.sol\":2030:2042  auctionState */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auction.sol\":2030:2059  auctionState == state.Running */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_90\n      jumpi\n      invalid\n    tag_90:\n      eq\n        /* \"contracts/Auction.sol\":2022:2060  require(auctionState == state.Running) */\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n        /* \"contracts/Auction.sol\":2173:2180  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Auction.sol\":2163:2172  msg.value */\n      callvalue\n        /* \"contracts/Auction.sol\":2163:2180  msg.value>1 ether */\n      gt\n        /* \"contracts/Auction.sol\":2155:2181  require(msg.value>1 ether) */\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n        /* \"contracts/Auction.sol\":2286:2301  uint currentbid */\n      0x00\n        /* \"contracts/Auction.sol\":2323:2326  inc */\n      sload(0x06)\n        /* \"contracts/Auction.sol\":2304:2308  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2304:2320  bids[msg.sender] */\n      0x00\n        /* \"contracts/Auction.sol\":2309:2319  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":2304:2320  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":2304:2326  bids[msg.sender] + inc */\n      add\n        /* \"contracts/Auction.sol\":2286:2326  uint currentbid = bids[msg.sender] + inc */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":2423:2440  highestBindingBid */\n      sload(0x05)\n        /* \"contracts/Auction.sol\":2410:2420  currentbid */\n      dup2\n        /* \"contracts/Auction.sol\":2410:2440  currentbid > highestBindingBid */\n      gt\n        /* \"contracts/Auction.sol\":2402:2441  require(currentbid > highestBindingBid) */\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n        /* \"contracts/Auction.sol\":2555:2565  currentbid */\n      dup1\n        /* \"contracts/Auction.sol\":2536:2540  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2536:2552  bids[msg.sender] */\n      0x00\n        /* \"contracts/Auction.sol\":2541:2551  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":2536:2552  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Auction.sol\":2536:2565  bids[msg.sender] = currentbid */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":2594:2598  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2594:2613  bids[highestBidder] */\n      0x00\n        /* \"contracts/Auction.sol\":2599:2612  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":2594:2613  bids[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":2583:2593  currentbid */\n      dup2\n        /* \"contracts/Auction.sol\":2583:2613  currentbid<bids[highestBidder] */\n      lt\n        /* \"contracts/Auction.sol\":2580:2847  if(currentbid<bids[highestBidder]){\r... */\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/Auction.sol\":2649:2691  min(currentbid + inc, bids[highestBidder]) */\n      tag_95\n        /* \"contracts/Auction.sol\":2666:2669  inc */\n      sload(0x06)\n        /* \"contracts/Auction.sol\":2653:2663  currentbid */\n      dup3\n        /* \"contracts/Auction.sol\":2653:2669  currentbid + inc */\n      add\n        /* \"contracts/Auction.sol\":2671:2675  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2671:2690  bids[highestBidder] */\n      0x00\n        /* \"contracts/Auction.sol\":2676:2689  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":2671:2690  bids[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":2649:2652  min */\n      tag_96\n        /* \"contracts/Auction.sol\":2649:2691  min(currentbid + inc, bids[highestBidder]) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/Auction.sol\":2629:2646  highestBindingBid */\n      0x05\n        /* \"contracts/Auction.sol\":2629:2691  highestBindingBid = min(currentbid + inc, bids[highestBidder]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":2580:2847  if(currentbid<bids[highestBidder]){\r... */\n      jump(tag_97)\n    tag_94:\n        /* \"contracts/Auction.sol\":2752:2794  min(currentbid, bids[highestBidder] + inc) */\n      tag_98\n        /* \"contracts/Auction.sol\":2756:2766  currentbid */\n      dup2\n        /* \"contracts/Auction.sol\":2790:2793  inc */\n      sload(0x06)\n        /* \"contracts/Auction.sol\":2768:2772  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2768:2787  bids[highestBidder] */\n      0x00\n        /* \"contracts/Auction.sol\":2773:2786  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":2768:2787  bids[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":2768:2793  bids[highestBidder] + inc */\n      add\n        /* \"contracts/Auction.sol\":2752:2755  min */\n      tag_96\n        /* \"contracts/Auction.sol\":2752:2794  min(currentbid, bids[highestBidder] + inc) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/Auction.sol\":2732:2749  highestBindingBid */\n      0x05\n        /* \"contracts/Auction.sol\":2732:2794  highestBindingBid = min(currentbid, bids[highestBidder] + inc) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":2825:2835  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":2809:2822  highestBidder */\n      0x07\n      0x00\n        /* \"contracts/Auction.sol\":2809:2835  highestBidder = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":2580:2847  if(currentbid<bids[highestBidder]){\r... */\n    tag_97:\n        /* \"contracts/Auction.sol\":1390:1391  _ */\n      pop\n        /* \"contracts/Auction.sol\":1851:2858  function placeBid() payable public notOwner started{\r... */\n      jump\t// out\n        /* \"contracts/Auction.sol\":465:494  uint public highestBindingBid */\n    tag_56:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":1677:1843  function min(uint a, uint b) pure private returns(uint){\r... */\n    tag_96:\n        /* \"contracts/Auction.sol\":1727:1731  uint */\n      0x00\n        /* \"contracts/Auction.sol\":1750:1751  b */\n      dup2\n        /* \"contracts/Auction.sol\":1747:1748  a */\n      dup4\n        /* \"contracts/Auction.sol\":1747:1751  a<=b */\n      gt\n        /* \"contracts/Auction.sol\":1743:1836  if (a<=b){\r... */\n      tag_100\n      jumpi\n        /* \"contracts/Auction.sol\":1774:1775  a */\n      dup3\n        /* \"contracts/Auction.sol\":1767:1775  return a */\n      swap1\n      pop\n      jump(tag_99)\n        /* \"contracts/Auction.sol\":1743:1836  if (a<=b){\r... */\n    tag_100:\n        /* \"contracts/Auction.sol\":1823:1824  b */\n      dup2\n        /* \"contracts/Auction.sol\":1816:1824  return b */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":1677:1843  function min(uint a, uint b) pure private returns(uint){\r... */\n    tag_99:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a7231582019a53c05913b79bb314ce987f097c796e53acb40d302d0139e37879834d7e28264736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360006101000a81548160ff0219169083600381111561007057fe5b02179055504360018190555062093a80600154016002819055506706f05b59d3b20000600681905550610bf0806100a86000396000f3fe6080604052600436106100c25760003560e01c80637fb450991161007f57806391f901571161005957806391f9015714610282578063d57bde79146102d9578063ecfc7ecc14610304578063f5b56c561461030e576100c2565b80637fb45099146101c7578063834ee417146102005780638da5cb5b1461022b576100c2565b806316243356146100c75780632352f320146100f2578063371303c0146101095780633ccfd60b146101345780633fdceefd1461014b57806362ea82db14610162575b600080fd5b3480156100d357600080fd5b506100dc610339565b6040518082815260200191505060405180910390f35b3480156100fe57600080fd5b5061010761033f565b005b34801561011557600080fd5b5061011e6103bd565b6040518082815260200191505060405180910390f35b34801561014057600080fd5b506101496103c3565b005b34801561015757600080fd5b5061016061074b565b005b34801561016e57600080fd5b506101b16004803603602081101561018557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ca565b6040518082815260200191505060405180910390f35b3480156101d357600080fd5b506101dc6107e2565b604051808260038111156101ec57fe5b60ff16815260200191505060405180910390f35b34801561020c57600080fd5b506102156107f5565b6040518082815260200191505060405180910390f35b34801561023757600080fd5b506102406107fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028e57600080fd5b50610297610820565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e557600080fd5b506102ee610846565b6040518082815260200191505060405180910390f35b61030c61084c565b005b34801561031a57600080fd5b50610323610b9a565b6040518082815260200191505060405180910390f35b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039857600080fd5b60038060006101000a81548160ff021916908360038111156103b657fe5b0217905550565b60065481565b6003808111156103cf57fe5b600360009054906101000a900460ff1660038111156103ea57fe5b148061041b5750600260038111156103fe57fe5b600360009054906101000a900460ff16600381111561041957fe5b145b80610427575060025443115b61043057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104ca57506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6104d357600080fd5b6000806003808111156104e257fe5b600360009054906101000a900460ff1660038111156104fd57fe5b141561054d57339150600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610700565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105d0576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055490506106ff565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156106b857600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540390506106fe565b339150600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b5b5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610746573d6000803e3d6000fd5b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a457600080fd5b6002600360006101000a81548160ff021916908360038111156107c357fe5b0217905550565b60086020528060005260406000206000915090505481565b600360009054906101000a900460ff1681565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561090f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f776e65722063616e6e6f74206269642100000000000000000000000000000081525060200191505060405180910390fd5b600154431161091d57600080fd5b6001600381111561092a57fe5b600360009054906101000a900460ff16600381111561094557fe5b1461094f57600080fd5b670de0b6b3a7640000341161096357600080fd5b6000600654600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401905060055481116109b957600080fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811015610ae057610ad5600654820160086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ba0565b600581905550610b97565b610b4f8160065460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401610ba0565b60058190555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60055481565b6000818311610bb157829050610bb5565b8190505b9291505056fea265627a7a7231582019a53c05913b79bb314ce987f097c796e53acb40d302d0139e37879834d7e28264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x70 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x1 SLOAD ADD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH8 0x6F05B59D3B20000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0xBF0 DUP1 PUSH2 0xA8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FB45099 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x91F90157 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xECFC7ECC EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xF5B56C56 EQ PUSH2 0x30E JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x7FB45099 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x834EE417 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22B JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x16243356 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x2352F320 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x371303C0 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x3FDCEEFD EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x74B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x84C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B6 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x3CF JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3EA JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x41B JUMPI POP PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3FE JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x419 JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x427 JUMPI POP PUSH1 0x2 SLOAD NUMBER GT JUMPDEST PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x4CA JUMPI POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT JUMPDEST PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x4E2 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x54D JUMPI CALLER SWAP2 POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x700 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB SWAP1 POP PUSH2 0x6FE JUMP JUMPDEST CALLER SWAP2 POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7C3 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F776E65722063616E6E6F742062696421000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER GT PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x92A JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x945 JUMPI INVALID JUMPDEST EQ PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE GT PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xAE0 JUMPI PUSH2 0xAD5 PUSH1 0x6 SLOAD DUP3 ADD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xB97 JUMP JUMPDEST PUSH2 0xB4F DUP2 PUSH1 0x6 SLOAD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0xBB1 JUMPI DUP3 SWAP1 POP PUSH2 0xBB5 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 NOT 0xA5 EXTCODECOPY SDIV SWAP2 EXTCODESIZE PUSH26 0xBB314CE987F097C796E53ACB40D302D0139E37879834D7E28264 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "35:4212:0:-;;;743:377;8:9:-1;5:2;;;30:1;27;20:12;5:2;743:377:0;785:10;777:5;;:18;;;;;;;;;;;;;;;;;;873:13;858:12;;:28;;;;;;;;;;;;;;;;;;;;;;;;957:12;944:10;:25;;;;1036:6;1023:10;;:19;1012:8;:30;;;;1103:9;1097:3;:15;;;;35:4212;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100c25760003560e01c80637fb450991161007f57806391f901571161005957806391f9015714610282578063d57bde79146102d9578063ecfc7ecc14610304578063f5b56c561461030e576100c2565b80637fb45099146101c7578063834ee417146102005780638da5cb5b1461022b576100c2565b806316243356146100c75780632352f320146100f2578063371303c0146101095780633ccfd60b146101345780633fdceefd1461014b57806362ea82db14610162575b600080fd5b3480156100d357600080fd5b506100dc610339565b6040518082815260200191505060405180910390f35b3480156100fe57600080fd5b5061010761033f565b005b34801561011557600080fd5b5061011e6103bd565b6040518082815260200191505060405180910390f35b34801561014057600080fd5b506101496103c3565b005b34801561015757600080fd5b5061016061074b565b005b34801561016e57600080fd5b506101b16004803603602081101561018557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ca565b6040518082815260200191505060405180910390f35b3480156101d357600080fd5b506101dc6107e2565b604051808260038111156101ec57fe5b60ff16815260200191505060405180910390f35b34801561020c57600080fd5b506102156107f5565b6040518082815260200191505060405180910390f35b34801561023757600080fd5b506102406107fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028e57600080fd5b50610297610820565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e557600080fd5b506102ee610846565b6040518082815260200191505060405180910390f35b61030c61084c565b005b34801561031a57600080fd5b50610323610b9a565b6040518082815260200191505060405180910390f35b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039857600080fd5b60038060006101000a81548160ff021916908360038111156103b657fe5b0217905550565b60065481565b6003808111156103cf57fe5b600360009054906101000a900460ff1660038111156103ea57fe5b148061041b5750600260038111156103fe57fe5b600360009054906101000a900460ff16600381111561041957fe5b145b80610427575060025443115b61043057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104ca57506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6104d357600080fd5b6000806003808111156104e257fe5b600360009054906101000a900460ff1660038111156104fd57fe5b141561054d57339150600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610700565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105d0576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055490506106ff565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156106b857600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540390506106fe565b339150600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b5b5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610746573d6000803e3d6000fd5b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a457600080fd5b6002600360006101000a81548160ff021916908360038111156107c357fe5b0217905550565b60086020528060005260406000206000915090505481565b600360009054906101000a900460ff1681565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561090f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f6f776e65722063616e6e6f74206269642100000000000000000000000000000081525060200191505060405180910390fd5b600154431161091d57600080fd5b6001600381111561092a57fe5b600360009054906101000a900460ff16600381111561094557fe5b1461094f57600080fd5b670de0b6b3a7640000341161096357600080fd5b6000600654600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401905060055481116109b957600080fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811015610ae057610ad5600654820160086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ba0565b600581905550610b97565b610b4f8160065460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401610ba0565b60058190555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60055481565b6000818311610bb157829050610bb5565b8190505b9291505056fea265627a7a7231582019a53c05913b79bb314ce987f097c796e53acb40d302d0139e37879834d7e28264736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FB45099 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x91F90157 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xECFC7ECC EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xF5B56C56 EQ PUSH2 0x30E JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x7FB45099 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x834EE417 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22B JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x16243356 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x2352F320 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x371303C0 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x3FDCEEFD EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x74B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x84C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B6 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x3CF JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3EA JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x41B JUMPI POP PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3FE JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x419 JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x427 JUMPI POP PUSH1 0x2 SLOAD NUMBER GT JUMPDEST PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x4CA JUMPI POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT JUMPDEST PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x4E2 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x54D JUMPI CALLER SWAP2 POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x700 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB SWAP1 POP PUSH2 0x6FE JUMP JUMPDEST CALLER SWAP2 POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7C3 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x90F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x11 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6F776E65722063616E6E6F742062696421000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER GT PUSH2 0x91D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x92A JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x945 JUMPI INVALID JUMPDEST EQ PUSH2 0x94F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE GT PUSH2 0x963 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x9B9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xAE0 JUMPI PUSH2 0xAD5 PUSH1 0x6 SLOAD DUP3 ADD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xB97 JUMP JUMPDEST PUSH2 0xB4F DUP2 PUSH1 0x6 SLOAD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD PUSH2 0xBA0 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0xBB1 JUMPI DUP3 SWAP1 POP PUSH2 0xBB5 JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 NOT 0xA5 EXTCODECOPY SDIV SWAP2 EXTCODESIZE PUSH26 0xBB314CE987F097C796E53ACB40D302D0139E37879834D7E28264 PUSH20 0x6F6C634300051100320000000000000000000000 ",
							"sourceMap": "35:4212:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;233:20:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1492:96;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1492:96:0;;;:::i;:::-;;529:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;529:15:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2866:1376;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2866:1376:0;;;:::i;:::-;;1596:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1596:73:0;;;:::i;:::-;;698:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;698:36:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;698:36:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;348:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:25:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;170:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;99:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;99:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;591:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;591:36:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;386:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;386:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1851:1007;;;:::i;:::-;;465:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;465:29:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;233:20;;;;:::o;1492:96::-;1284:5;;;;;;;;;;;1270:19;;:10;:19;;;1262:28;;;;;;1568:12;1553;;:27;;;;;;;;;;;;;;;;;;;;;;;;1492:96::o;529:15::-;;;;:::o;2866:1376::-;2930:12;2914:28;;;;;;;;:12;;;;;;;;;;;:28;;;;;;;;;2913:60;;;;2963:9;2947:25;;;;;;;;:12;;;;;;;;;;;:25;;;;;;;;;2913:60;:88;;;;2992:8;;2977:12;:23;2913:88;2905:97;;;;;;3036:5;;;;;;;;;;;3022:19;;:10;:19;;;3021:47;;;;3066:1;3047:4;:16;3052:10;3047:16;;;;;;;;;;;;;;;;:20;3021:47;3013:56;;;;;;3082:22;3115:11;3248:12;3232:28;;;;;;;;:12;;;;;;;;;;;:28;;;;;;;;;3229:902;;;3285:10;3276:19;;3319:4;:16;3324:10;3319:16;;;;;;;;;;;;;;;;3310:25;;3229:902;;;3476:5;;;;;;;;;;;3462:19;;:10;:19;;;3459:661;;;3510:5;;;;;;;;;;;3501:14;;3543:17;;3534:26;;3459:661;;;3722:13;;;;;;;;;;;3708:27;;:10;:27;;;3705:400;;;3768:13;;;;;;;;;;;3759:22;;3835:17;;3813:4;:19;3818:13;;;;;;;;;;;3813:19;;;;;;;;;;;;;;;;:39;3804:48;;3705:400;;;4027:10;4018:19;;4069:4;:16;4074:10;4069:16;;;;;;;;;;;;;;;;4060:25;;3705:400;3459:661;3229:902;4209:6;:15;;:23;4225:6;4209:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4209:23:0;2866:1376;;:::o;1596:73::-;1284:5;;;;;;;;;;;1270:19;;:10;:19;;;1262:28;;;;;;1652:9;1637:12;;:24;;;;;;;;;;;;;;;;;;;;;;;;1596:73::o;698:36::-;;;;;;;;;;;;;;;;;:::o;348:25::-;;;;;;;;;;;;;:::o;170:22::-;;;;:::o;99:28::-;;;;;;;;;;;;;:::o;591:36::-;;;;;;;;;;;;;:::o;386:22::-;;;;:::o;1851:1007::-;1180:5;;;;;;;;;;;1166:19;;:10;:19;;;;1158:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1368:10;;1355:12;:23;1347:32;;;;;;2046:13;2030:29;;;;;;;;:12;;;;;;;;;;;:29;;;;;;;;;2022:38;;;;;;2173:7;2163:9;:17;2155:26;;;;;;2286:15;2323:3;;2304:4;:16;2309:10;2304:16;;;;;;;;;;;;;;;;:22;2286:40;;2423:17;;2410:10;:30;2402:39;;;;;;2555:10;2536:4;:16;2541:10;2536:16;;;;;;;;;;;;;;;:29;;;;2594:4;:19;2599:13;;;;;;;;;;;2594:19;;;;;;;;;;;;;;;;2583:10;:30;2580:267;;;2649:42;2666:3;;2653:10;:16;2671:4;:19;2676:13;;;;;;;;;;;2671:19;;;;;;;;;;;;;;;;2649:3;:42::i;:::-;2629:17;:62;;;;2580:267;;;2752:42;2756:10;2790:3;;2768:4;:19;2773:13;;;;;;;;;;;2768:19;;;;;;;;;;;;;;;;:25;2752:3;:42::i;:::-;2732:17;:62;;;;2825:10;2809:13;;:26;;;;;;;;;;;;;;;;;;2580:267;1390:1;1851:1007::o;465:29::-;;;;:::o;1677:166::-;1727:4;1750:1;1747;:4;1743:93;;1774:1;1767:8;;;;1743:93;1823:1;1816:8;;1677:166;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "611200",
								"executionCost": "103245",
								"totalCost": "714445"
							},
							"external": {
								"auctionState()": "1096",
								"bids(address)": "1280",
								"cancelAuc()": "21924",
								"endAuc()": "21990",
								"end_time()": "1006",
								"highestBid()": "1049",
								"highestBidder()": "1075",
								"highestBindingBid()": "1093",
								"inc()": "1050",
								"owner()": "1120",
								"placeBid()": "70695",
								"start_time()": "1050",
								"withdraw()": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "64"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 4247,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 35,
									"end": 4247,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 35,
									"end": 4247,
									"name": "MSTORE"
								},
								{
									"begin": 743,
									"end": 1120,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 743,
									"end": 1120,
									"name": "POP"
								},
								{
									"begin": 785,
									"end": 795,
									"name": "CALLER"
								},
								{
									"begin": 777,
									"end": 782,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 777,
									"end": 782,
									"name": "DUP1"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "EXP"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "DUP2"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "SLOAD"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "DUP2"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "MUL"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "NOT"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "AND"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "SWAP1"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "DUP4"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "AND"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "MUL"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "OR"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "SWAP1"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "SSTORE"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "POP"
								},
								{
									"begin": 873,
									"end": 886,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 858,
									"end": 870,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 858,
									"end": 870,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "EXP"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "DUP2"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "SLOAD"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "DUP2"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "MUL"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "NOT"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "AND"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "SWAP1"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "DUP4"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "DUP2"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "GT"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "ISZERO"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "JUMPI"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "INVALID"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "JUMPDEST"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "MUL"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "OR"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "SWAP1"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "SSTORE"
								},
								{
									"begin": 858,
									"end": 886,
									"name": "POP"
								},
								{
									"begin": 957,
									"end": 969,
									"name": "NUMBER"
								},
								{
									"begin": 944,
									"end": 954,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 944,
									"end": 969,
									"name": "DUP2"
								},
								{
									"begin": 944,
									"end": 969,
									"name": "SWAP1"
								},
								{
									"begin": 944,
									"end": 969,
									"name": "SSTORE"
								},
								{
									"begin": 944,
									"end": 969,
									"name": "POP"
								},
								{
									"begin": 1036,
									"end": 1042,
									"name": "PUSH",
									"value": "93A80"
								},
								{
									"begin": 1023,
									"end": 1033,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1023,
									"end": 1033,
									"name": "SLOAD"
								},
								{
									"begin": 1023,
									"end": 1042,
									"name": "ADD"
								},
								{
									"begin": 1012,
									"end": 1020,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 1012,
									"end": 1042,
									"name": "DUP2"
								},
								{
									"begin": 1012,
									"end": 1042,
									"name": "SWAP1"
								},
								{
									"begin": 1012,
									"end": 1042,
									"name": "SSTORE"
								},
								{
									"begin": 1012,
									"end": 1042,
									"name": "POP"
								},
								{
									"begin": 1103,
									"end": 1112,
									"name": "PUSH",
									"value": "6F05B59D3B20000"
								},
								{
									"begin": 1097,
									"end": 1100,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 1097,
									"end": 1112,
									"name": "DUP2"
								},
								{
									"begin": 1097,
									"end": 1112,
									"name": "SWAP1"
								},
								{
									"begin": 1097,
									"end": 1112,
									"name": "SSTORE"
								},
								{
									"begin": 1097,
									"end": 1112,
									"name": "POP"
								},
								{
									"begin": 35,
									"end": 4247,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 4247,
									"name": "DUP1"
								},
								{
									"begin": 35,
									"end": 4247,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 4247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 35,
									"end": 4247,
									"name": "CODECOPY"
								},
								{
									"begin": 35,
									"end": 4247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 35,
									"end": 4247,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a7231582019a53c05913b79bb314ce987f097c796e53acb40d302d0139e37879834d7e28264736f6c63430005110032",
									".code": [
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "MSTORE"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "LT"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "SHR"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "7FB45099"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "GT"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "91F90157"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "GT"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "91F90157"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "D57BDE79"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "ECFC7ECC"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "F5B56C56"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMP"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPDEST"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "7FB45099"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "834EE417"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMP"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPDEST"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "16243356"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "2352F320"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "371303C0"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "3FDCEEFD"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "62EA82DB"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "JUMPDEST"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 4247,
											"name": "REVERT"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "POP"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "MLOAD"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP1"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP3"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "MSTORE"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "ADD"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "POP"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "POP"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "MLOAD"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP1"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SUB"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "RETURN"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "JUMPDEST"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "JUMPDEST"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "STOP"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "MLOAD"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "DUP3"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "MSTORE"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "ADD"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "SWAP2"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "MLOAD"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "SWAP2"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "SUB"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "RETURN"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "JUMPDEST"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "JUMPDEST"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "STOP"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "JUMPDEST"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "POP"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "JUMPDEST"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "STOP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "ADD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "AND"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "ADD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP3"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "MLOAD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP3"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "MSTORE"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "ADD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "MLOAD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SUB"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "RETURN"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "POP"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "MLOAD"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP3"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "GT"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "ISZERO"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMPI"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "INVALID"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "AND"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "MSTORE"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "ADD"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP2"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "POP"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "POP"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "MLOAD"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP2"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SUB"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "RETURN"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "JUMPDEST"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "POP"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "JUMPDEST"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "MLOAD"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "DUP1"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "DUP3"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "DUP2"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "MSTORE"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "ADD"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "SWAP2"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "POP"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "POP"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "MLOAD"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "DUP1"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "SWAP2"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "SUB"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "SWAP1"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "RETURN"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "POP"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "MLOAD"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP3"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "AND"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "AND"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP2"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "MSTORE"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "ADD"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP2"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "POP"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "POP"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "MLOAD"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP2"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SUB"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "RETURN"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "POP"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "MLOAD"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DUP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DUP3"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "AND"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "AND"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DUP2"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "MSTORE"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "ADD"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP2"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "POP"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "POP"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "MLOAD"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DUP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP2"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SUB"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "RETURN"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "MLOAD"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "DUP3"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "SWAP2"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "MLOAD"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "SWAP2"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "SUB"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "SWAP1"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "RETURN"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "JUMPDEST"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "STOP"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "MLOAD"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "DUP1"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "DUP3"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "MSTORE"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "ADD"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "MLOAD"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "DUP1"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "SUB"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "RETURN"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SLOAD"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "JUMPDEST"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DUP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SLOAD"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "EXP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DIV"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1270,
											"end": 1280,
											"name": "CALLER"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "EQ"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "JUMPI"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "DUP1"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "REVERT"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "JUMPDEST"
										},
										{
											"begin": 1568,
											"end": 1580,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1553,
											"end": 1565,
											"name": "DUP1"
										},
										{
											"begin": 1553,
											"end": 1565,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "EXP"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "DUP2"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "SLOAD"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "DUP2"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "MUL"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "NOT"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "AND"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "SWAP1"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "DUP4"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "DUP2"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "GT"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "ISZERO"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "JUMPI"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "INVALID"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "JUMPDEST"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "MUL"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "OR"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "SWAP1"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "SSTORE"
										},
										{
											"begin": 1553,
											"end": 1580,
											"name": "POP"
										},
										{
											"begin": 1492,
											"end": 1588,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "JUMPDEST"
										},
										{
											"begin": 2930,
											"end": 2942,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "DUP1"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "DUP2"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "GT"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "ISZERO"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "JUMPI"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "INVALID"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "SLOAD"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "EXP"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "SWAP1"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "DIV"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2914,
											"end": 2926,
											"name": "AND"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "DUP2"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "GT"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "ISZERO"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "JUMPI"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "INVALID"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "JUMPDEST"
										},
										{
											"begin": 2914,
											"end": 2942,
											"name": "EQ"
										},
										{
											"begin": 2913,
											"end": 2973,
											"name": "DUP1"
										},
										{
											"begin": 2913,
											"end": 2973,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2913,
											"end": 2973,
											"name": "JUMPI"
										},
										{
											"begin": 2913,
											"end": 2973,
											"name": "POP"
										},
										{
											"begin": 2963,
											"end": 2972,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "DUP2"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "GT"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "ISZERO"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "JUMPI"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "INVALID"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "JUMPDEST"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SWAP1"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SLOAD"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SWAP1"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "EXP"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SWAP1"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "DIV"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "AND"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "DUP2"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "GT"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "ISZERO"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "JUMPI"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "INVALID"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "JUMPDEST"
										},
										{
											"begin": 2947,
											"end": 2972,
											"name": "EQ"
										},
										{
											"begin": 2913,
											"end": 2973,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2913,
											"end": 2973,
											"name": "JUMPDEST"
										},
										{
											"begin": 2913,
											"end": 3001,
											"name": "DUP1"
										},
										{
											"begin": 2913,
											"end": 3001,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2913,
											"end": 3001,
											"name": "JUMPI"
										},
										{
											"begin": 2913,
											"end": 3001,
											"name": "POP"
										},
										{
											"begin": 2992,
											"end": 3000,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2992,
											"end": 3000,
											"name": "SLOAD"
										},
										{
											"begin": 2977,
											"end": 2989,
											"name": "NUMBER"
										},
										{
											"begin": 2977,
											"end": 3000,
											"name": "GT"
										},
										{
											"begin": 2913,
											"end": 3001,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2913,
											"end": 3001,
											"name": "JUMPDEST"
										},
										{
											"begin": 2905,
											"end": 3002,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2905,
											"end": 3002,
											"name": "JUMPI"
										},
										{
											"begin": 2905,
											"end": 3002,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2905,
											"end": 3002,
											"name": "DUP1"
										},
										{
											"begin": 2905,
											"end": 3002,
											"name": "REVERT"
										},
										{
											"begin": 2905,
											"end": 3002,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2905,
											"end": 3002,
											"name": "JUMPDEST"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "DUP1"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "SWAP1"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "SLOAD"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "SWAP1"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "EXP"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "SWAP1"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "DIV"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3036,
											"end": 3041,
											"name": "AND"
										},
										{
											"begin": 3022,
											"end": 3041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3022,
											"end": 3041,
											"name": "AND"
										},
										{
											"begin": 3022,
											"end": 3032,
											"name": "CALLER"
										},
										{
											"begin": 3022,
											"end": 3041,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3022,
											"end": 3041,
											"name": "AND"
										},
										{
											"begin": 3022,
											"end": 3041,
											"name": "EQ"
										},
										{
											"begin": 3021,
											"end": 3068,
											"name": "DUP1"
										},
										{
											"begin": 3021,
											"end": 3068,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 3021,
											"end": 3068,
											"name": "JUMPI"
										},
										{
											"begin": 3021,
											"end": 3068,
											"name": "POP"
										},
										{
											"begin": 3066,
											"end": 3067,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3051,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3062,
											"name": "CALLER"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "AND"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "AND"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "DUP2"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "MSTORE"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "ADD"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "SWAP1"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "DUP2"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "MSTORE"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "ADD"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "KECCAK256"
										},
										{
											"begin": 3047,
											"end": 3063,
											"name": "SLOAD"
										},
										{
											"begin": 3047,
											"end": 3067,
											"name": "GT"
										},
										{
											"begin": 3021,
											"end": 3068,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 3021,
											"end": 3068,
											"name": "JUMPDEST"
										},
										{
											"begin": 3013,
											"end": 3069,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 3013,
											"end": 3069,
											"name": "JUMPI"
										},
										{
											"begin": 3013,
											"end": 3069,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3013,
											"end": 3069,
											"name": "DUP1"
										},
										{
											"begin": 3013,
											"end": 3069,
											"name": "REVERT"
										},
										{
											"begin": 3013,
											"end": 3069,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 3013,
											"end": 3069,
											"name": "JUMPDEST"
										},
										{
											"begin": 3082,
											"end": 3104,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3115,
											"end": 3126,
											"name": "DUP1"
										},
										{
											"begin": 3248,
											"end": 3260,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP1"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "GT"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "ISZERO"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "JUMPI"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "INVALID"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "JUMPDEST"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "SWAP1"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "SLOAD"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "SWAP1"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "EXP"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "SWAP1"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "DIV"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3232,
											"end": 3244,
											"name": "AND"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "DUP2"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "GT"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "ISZERO"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "JUMPI"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "INVALID"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "JUMPDEST"
										},
										{
											"begin": 3232,
											"end": 3260,
											"name": "EQ"
										},
										{
											"begin": 3229,
											"end": 4131,
											"name": "ISZERO"
										},
										{
											"begin": 3229,
											"end": 4131,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 3229,
											"end": 4131,
											"name": "JUMPI"
										},
										{
											"begin": 3285,
											"end": 3295,
											"name": "CALLER"
										},
										{
											"begin": 3276,
											"end": 3295,
											"name": "SWAP2"
										},
										{
											"begin": 3276,
											"end": 3295,
											"name": "POP"
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3334,
											"name": "CALLER"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "AND"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "SWAP1"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "DUP2"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "MSTORE"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "ADD"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "KECCAK256"
										},
										{
											"begin": 3319,
											"end": 3335,
											"name": "SLOAD"
										},
										{
											"begin": 3310,
											"end": 3335,
											"name": "SWAP1"
										},
										{
											"begin": 3310,
											"end": 3335,
											"name": "POP"
										},
										{
											"begin": 3229,
											"end": 4131,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3229,
											"end": 4131,
											"name": "JUMP"
										},
										{
											"begin": 3229,
											"end": 4131,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 3229,
											"end": 4131,
											"name": "JUMPDEST"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "DUP1"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "SWAP1"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "SLOAD"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "SWAP1"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "EXP"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "SWAP1"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "DIV"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3476,
											"end": 3481,
											"name": "AND"
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "AND"
										},
										{
											"begin": 3462,
											"end": 3472,
											"name": "CALLER"
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "AND"
										},
										{
											"begin": 3462,
											"end": 3481,
											"name": "EQ"
										},
										{
											"begin": 3459,
											"end": 4120,
											"name": "ISZERO"
										},
										{
											"begin": 3459,
											"end": 4120,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3459,
											"end": 4120,
											"name": "JUMPI"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "DUP1"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "SWAP1"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "SLOAD"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "SWAP1"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "EXP"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "SWAP1"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "DIV"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3515,
											"name": "AND"
										},
										{
											"begin": 3501,
											"end": 3515,
											"name": "SWAP2"
										},
										{
											"begin": 3501,
											"end": 3515,
											"name": "POP"
										},
										{
											"begin": 3543,
											"end": 3560,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3543,
											"end": 3560,
											"name": "SLOAD"
										},
										{
											"begin": 3534,
											"end": 3560,
											"name": "SWAP1"
										},
										{
											"begin": 3534,
											"end": 3560,
											"name": "POP"
										},
										{
											"begin": 3459,
											"end": 4120,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3459,
											"end": 4120,
											"name": "JUMP"
										},
										{
											"begin": 3459,
											"end": 4120,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3459,
											"end": 4120,
											"name": "JUMPDEST"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "SWAP1"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "SLOAD"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "SWAP1"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "EXP"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "SWAP1"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "DIV"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3722,
											"end": 3735,
											"name": "AND"
										},
										{
											"begin": 3708,
											"end": 3735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3708,
											"end": 3735,
											"name": "AND"
										},
										{
											"begin": 3708,
											"end": 3718,
											"name": "CALLER"
										},
										{
											"begin": 3708,
											"end": 3735,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3708,
											"end": 3735,
											"name": "AND"
										},
										{
											"begin": 3708,
											"end": 3735,
											"name": "EQ"
										},
										{
											"begin": 3705,
											"end": 4105,
											"name": "ISZERO"
										},
										{
											"begin": 3705,
											"end": 4105,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3705,
											"end": 4105,
											"name": "JUMPI"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "SLOAD"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "EXP"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "SWAP1"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "DIV"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3768,
											"end": 3781,
											"name": "AND"
										},
										{
											"begin": 3759,
											"end": 3781,
											"name": "SWAP2"
										},
										{
											"begin": 3759,
											"end": 3781,
											"name": "POP"
										},
										{
											"begin": 3835,
											"end": 3852,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3835,
											"end": 3852,
											"name": "SLOAD"
										},
										{
											"begin": 3813,
											"end": 3817,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "SWAP1"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "SLOAD"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "SWAP1"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "EXP"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "SWAP1"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "DIV"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3818,
											"end": 3831,
											"name": "AND"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "AND"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "AND"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "DUP2"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "MSTORE"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "ADD"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "SWAP1"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "DUP2"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "MSTORE"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "ADD"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "KECCAK256"
										},
										{
											"begin": 3813,
											"end": 3832,
											"name": "SLOAD"
										},
										{
											"begin": 3813,
											"end": 3852,
											"name": "SUB"
										},
										{
											"begin": 3804,
											"end": 3852,
											"name": "SWAP1"
										},
										{
											"begin": 3804,
											"end": 3852,
											"name": "POP"
										},
										{
											"begin": 3705,
											"end": 4105,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3705,
											"end": 4105,
											"name": "JUMP"
										},
										{
											"begin": 3705,
											"end": 4105,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 3705,
											"end": 4105,
											"name": "JUMPDEST"
										},
										{
											"begin": 4027,
											"end": 4037,
											"name": "CALLER"
										},
										{
											"begin": 4018,
											"end": 4037,
											"name": "SWAP2"
										},
										{
											"begin": 4018,
											"end": 4037,
											"name": "POP"
										},
										{
											"begin": 4069,
											"end": 4073,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4084,
											"name": "CALLER"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "AND"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "AND"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "DUP2"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "MSTORE"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "ADD"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "SWAP1"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "DUP2"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "MSTORE"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "ADD"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "KECCAK256"
										},
										{
											"begin": 4069,
											"end": 4085,
											"name": "SLOAD"
										},
										{
											"begin": 4060,
											"end": 4085,
											"name": "SWAP1"
										},
										{
											"begin": 4060,
											"end": 4085,
											"name": "POP"
										},
										{
											"begin": 3705,
											"end": 4105,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3705,
											"end": 4105,
											"name": "JUMPDEST"
										},
										{
											"begin": 3459,
											"end": 4120,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3459,
											"end": 4120,
											"name": "JUMPDEST"
										},
										{
											"begin": 3229,
											"end": 4131,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3229,
											"end": 4131,
											"name": "JUMPDEST"
										},
										{
											"begin": 4209,
											"end": 4215,
											"name": "DUP2"
										},
										{
											"begin": 4209,
											"end": 4224,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4209,
											"end": 4224,
											"name": "AND"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 4225,
											"end": 4231,
											"name": "DUP3"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "SWAP1"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "DUP2"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "ISZERO"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "MUL"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "SWAP1"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "MLOAD"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "MLOAD"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "DUP1"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "DUP4"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "SUB"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "DUP2"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "DUP6"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "DUP9"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "DUP9"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "CALL"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "SWAP4"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 4209,
											"end": 4232,
											"name": "POP"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "POP"
										},
										{
											"begin": 2866,
											"end": 4242,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "JUMPDEST"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DUP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SLOAD"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "EXP"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "SWAP1"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "DIV"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1284,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1270,
											"end": 1280,
											"name": "CALLER"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "AND"
										},
										{
											"begin": 1270,
											"end": 1289,
											"name": "EQ"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "JUMPI"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "DUP1"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "REVERT"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1262,
											"end": 1290,
											"name": "JUMPDEST"
										},
										{
											"begin": 1652,
											"end": 1661,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1637,
											"end": 1649,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "EXP"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "DUP2"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "SLOAD"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "DUP2"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "MUL"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "NOT"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "AND"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "SWAP1"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "DUP4"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "DUP2"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "GT"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "ISZERO"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "JUMPI"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "INVALID"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "JUMPDEST"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "MUL"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "OR"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "SWAP1"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "SSTORE"
										},
										{
											"begin": 1637,
											"end": 1661,
											"name": "POP"
										},
										{
											"begin": 1596,
											"end": 1669,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "MSTORE"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "MSTORE"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "KECCAK256"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SLOAD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SLOAD"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "EXP"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DIV"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "AND"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "JUMPDEST"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "SLOAD"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "DUP2"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SLOAD"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "EXP"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DIV"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "AND"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP2"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SLOAD"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "EXP"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DIV"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "AND"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DUP2"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "SLOAD"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "JUMPDEST"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "DUP1"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "SLOAD"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "EXP"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "SWAP1"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "DIV"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1180,
											"end": 1185,
											"name": "AND"
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "AND"
										},
										{
											"begin": 1166,
											"end": 1176,
											"name": "CALLER"
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "AND"
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "EQ"
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "ISZERO"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "JUMPI"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "MLOAD"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "PUSH",
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "DUP2"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "MSTORE"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "ADD"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "DUP1"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "DUP1"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "ADD"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "DUP3"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "DUP2"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "SUB"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "DUP3"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "MSTORE"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "PUSH",
											"value": "11"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "DUP2"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "MSTORE"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "ADD"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "DUP1"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "PUSH",
											"value": "6F776E65722063616E6E6F742062696421000000000000000000000000000000"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "DUP2"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "MSTORE"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "POP"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "ADD"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "SWAP2"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "POP"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "POP"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "MLOAD"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "DUP1"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "SWAP2"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "SUB"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "SWAP1"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "REVERT"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 1158,
											"end": 1207,
											"name": "JUMPDEST"
										},
										{
											"begin": 1368,
											"end": 1378,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1368,
											"end": 1378,
											"name": "SLOAD"
										},
										{
											"begin": 1355,
											"end": 1367,
											"name": "NUMBER"
										},
										{
											"begin": 1355,
											"end": 1378,
											"name": "GT"
										},
										{
											"begin": 1347,
											"end": 1379,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 1347,
											"end": 1379,
											"name": "JUMPI"
										},
										{
											"begin": 1347,
											"end": 1379,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1347,
											"end": 1379,
											"name": "DUP1"
										},
										{
											"begin": 1347,
											"end": 1379,
											"name": "REVERT"
										},
										{
											"begin": 1347,
											"end": 1379,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1347,
											"end": 1379,
											"name": "JUMPDEST"
										},
										{
											"begin": 2046,
											"end": 2059,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "DUP2"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "GT"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "ISZERO"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "JUMPI"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "INVALID"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "JUMPDEST"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "SLOAD"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "EXP"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "SWAP1"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "DIV"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2030,
											"end": 2042,
											"name": "AND"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "DUP2"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "GT"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "ISZERO"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "JUMPI"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "INVALID"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "JUMPDEST"
										},
										{
											"begin": 2030,
											"end": 2059,
											"name": "EQ"
										},
										{
											"begin": 2022,
											"end": 2060,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 2022,
											"end": 2060,
											"name": "JUMPI"
										},
										{
											"begin": 2022,
											"end": 2060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2022,
											"end": 2060,
											"name": "DUP1"
										},
										{
											"begin": 2022,
											"end": 2060,
											"name": "REVERT"
										},
										{
											"begin": 2022,
											"end": 2060,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 2022,
											"end": 2060,
											"name": "JUMPDEST"
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 2163,
											"end": 2172,
											"name": "CALLVALUE"
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "GT"
										},
										{
											"begin": 2155,
											"end": 2181,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 2155,
											"end": 2181,
											"name": "JUMPI"
										},
										{
											"begin": 2155,
											"end": 2181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2181,
											"name": "DUP1"
										},
										{
											"begin": 2155,
											"end": 2181,
											"name": "REVERT"
										},
										{
											"begin": 2155,
											"end": 2181,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 2155,
											"end": 2181,
											"name": "JUMPDEST"
										},
										{
											"begin": 2286,
											"end": 2301,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2326,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2323,
											"end": 2326,
											"name": "SLOAD"
										},
										{
											"begin": 2304,
											"end": 2308,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2309,
											"end": 2319,
											"name": "CALLER"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "AND"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "AND"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "DUP2"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "MSTORE"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "ADD"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "SWAP1"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "DUP2"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "MSTORE"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "ADD"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "KECCAK256"
										},
										{
											"begin": 2304,
											"end": 2320,
											"name": "SLOAD"
										},
										{
											"begin": 2304,
											"end": 2326,
											"name": "ADD"
										},
										{
											"begin": 2286,
											"end": 2326,
											"name": "SWAP1"
										},
										{
											"begin": 2286,
											"end": 2326,
											"name": "POP"
										},
										{
											"begin": 2423,
											"end": 2440,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2423,
											"end": 2440,
											"name": "SLOAD"
										},
										{
											"begin": 2410,
											"end": 2420,
											"name": "DUP2"
										},
										{
											"begin": 2410,
											"end": 2440,
											"name": "GT"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "JUMPI"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "DUP1"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "REVERT"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2402,
											"end": 2441,
											"name": "JUMPDEST"
										},
										{
											"begin": 2555,
											"end": 2565,
											"name": "DUP1"
										},
										{
											"begin": 2536,
											"end": 2540,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2551,
											"name": "CALLER"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "AND"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "AND"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "MSTORE"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "ADD"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2536,
											"end": 2552,
											"name": "KECCAK256"
										},
										{
											"begin": 2536,
											"end": 2565,
											"name": "DUP2"
										},
										{
											"begin": 2536,
											"end": 2565,
											"name": "SWAP1"
										},
										{
											"begin": 2536,
											"end": 2565,
											"name": "SSTORE"
										},
										{
											"begin": 2536,
											"end": 2565,
											"name": "POP"
										},
										{
											"begin": 2594,
											"end": 2598,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "SLOAD"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "EXP"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "SWAP1"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "DIV"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2599,
											"end": 2612,
											"name": "AND"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "AND"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "AND"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "DUP2"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "MSTORE"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "ADD"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "SWAP1"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "DUP2"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "MSTORE"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "ADD"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "KECCAK256"
										},
										{
											"begin": 2594,
											"end": 2613,
											"name": "SLOAD"
										},
										{
											"begin": 2583,
											"end": 2593,
											"name": "DUP2"
										},
										{
											"begin": 2583,
											"end": 2613,
											"name": "LT"
										},
										{
											"begin": 2580,
											"end": 2847,
											"name": "ISZERO"
										},
										{
											"begin": 2580,
											"end": 2847,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2580,
											"end": 2847,
											"name": "JUMPI"
										},
										{
											"begin": 2649,
											"end": 2691,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2666,
											"end": 2669,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2666,
											"end": 2669,
											"name": "SLOAD"
										},
										{
											"begin": 2653,
											"end": 2663,
											"name": "DUP3"
										},
										{
											"begin": 2653,
											"end": 2669,
											"name": "ADD"
										},
										{
											"begin": 2671,
											"end": 2675,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "SWAP1"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "SLOAD"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "SWAP1"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "EXP"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "SWAP1"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "DIV"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2676,
											"end": 2689,
											"name": "AND"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "AND"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "AND"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "DUP2"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "MSTORE"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "ADD"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "SWAP1"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "DUP2"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "MSTORE"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "ADD"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "KECCAK256"
										},
										{
											"begin": 2671,
											"end": 2690,
											"name": "SLOAD"
										},
										{
											"begin": 2649,
											"end": 2652,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2649,
											"end": 2691,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2649,
											"end": 2691,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2649,
											"end": 2691,
											"name": "JUMPDEST"
										},
										{
											"begin": 2629,
											"end": 2646,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2629,
											"end": 2691,
											"name": "DUP2"
										},
										{
											"begin": 2629,
											"end": 2691,
											"name": "SWAP1"
										},
										{
											"begin": 2629,
											"end": 2691,
											"name": "SSTORE"
										},
										{
											"begin": 2629,
											"end": 2691,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2847,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2580,
											"end": 2847,
											"name": "JUMP"
										},
										{
											"begin": 2580,
											"end": 2847,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2580,
											"end": 2847,
											"name": "JUMPDEST"
										},
										{
											"begin": 2752,
											"end": 2794,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2756,
											"end": 2766,
											"name": "DUP2"
										},
										{
											"begin": 2790,
											"end": 2793,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2790,
											"end": 2793,
											"name": "SLOAD"
										},
										{
											"begin": 2768,
											"end": 2772,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "SWAP1"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "SLOAD"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "SWAP1"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "EXP"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "SWAP1"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "DIV"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2773,
											"end": 2786,
											"name": "AND"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "AND"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "AND"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "DUP2"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "MSTORE"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "ADD"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "SWAP1"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "DUP2"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "MSTORE"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "ADD"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "KECCAK256"
										},
										{
											"begin": 2768,
											"end": 2787,
											"name": "SLOAD"
										},
										{
											"begin": 2768,
											"end": 2793,
											"name": "ADD"
										},
										{
											"begin": 2752,
											"end": 2755,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2752,
											"end": 2794,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2752,
											"end": 2794,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2752,
											"end": 2794,
											"name": "JUMPDEST"
										},
										{
											"begin": 2732,
											"end": 2749,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2732,
											"end": 2794,
											"name": "DUP2"
										},
										{
											"begin": 2732,
											"end": 2794,
											"name": "SWAP1"
										},
										{
											"begin": 2732,
											"end": 2794,
											"name": "SSTORE"
										},
										{
											"begin": 2732,
											"end": 2794,
											"name": "POP"
										},
										{
											"begin": 2825,
											"end": 2835,
											"name": "CALLER"
										},
										{
											"begin": 2809,
											"end": 2822,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2809,
											"end": 2822,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "EXP"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "DUP2"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "SLOAD"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "DUP2"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "MUL"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "NOT"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "AND"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "SWAP1"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "DUP4"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "AND"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "MUL"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "OR"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "SWAP1"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "SSTORE"
										},
										{
											"begin": 2809,
											"end": 2835,
											"name": "POP"
										},
										{
											"begin": 2580,
											"end": 2847,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2580,
											"end": 2847,
											"name": "JUMPDEST"
										},
										{
											"begin": 1390,
											"end": 1391,
											"name": "POP"
										},
										{
											"begin": 1851,
											"end": 2858,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "SLOAD"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1677,
											"end": 1843,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 1677,
											"end": 1843,
											"name": "JUMPDEST"
										},
										{
											"begin": 1727,
											"end": 1731,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1750,
											"end": 1751,
											"name": "DUP2"
										},
										{
											"begin": 1747,
											"end": 1748,
											"name": "DUP4"
										},
										{
											"begin": 1747,
											"end": 1751,
											"name": "GT"
										},
										{
											"begin": 1743,
											"end": 1836,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 1743,
											"end": 1836,
											"name": "JUMPI"
										},
										{
											"begin": 1774,
											"end": 1775,
											"name": "DUP3"
										},
										{
											"begin": 1767,
											"end": 1775,
											"name": "SWAP1"
										},
										{
											"begin": 1767,
											"end": 1775,
											"name": "POP"
										},
										{
											"begin": 1767,
											"end": 1775,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 1767,
											"end": 1775,
											"name": "JUMP"
										},
										{
											"begin": 1743,
											"end": 1836,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 1743,
											"end": 1836,
											"name": "JUMPDEST"
										},
										{
											"begin": 1823,
											"end": 1824,
											"name": "DUP2"
										},
										{
											"begin": 1816,
											"end": 1824,
											"name": "SWAP1"
										},
										{
											"begin": 1816,
											"end": 1824,
											"name": "POP"
										},
										{
											"begin": 1677,
											"end": 1843,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 1677,
											"end": 1843,
											"name": "JUMPDEST"
										},
										{
											"begin": 1677,
											"end": 1843,
											"name": "SWAP3"
										},
										{
											"begin": 1677,
											"end": 1843,
											"name": "SWAP2"
										},
										{
											"begin": 1677,
											"end": 1843,
											"name": "POP"
										},
										{
											"begin": 1677,
											"end": 1843,
											"name": "POP"
										},
										{
											"begin": 1677,
											"end": 1843,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"auctionState()": "7fb45099",
							"bids(address)": "62ea82db",
							"cancelAuc()": "2352f320",
							"endAuc()": "3fdceefd",
							"end_time()": "16243356",
							"highestBid()": "d57bde79",
							"highestBidder()": "91f90157",
							"highestBindingBid()": "f5b56c56",
							"inc()": "371303c0",
							"owner()": "8da5cb5b",
							"placeBid()": "ecfc7ecc",
							"start_time()": "834ee417",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctionState\",\"outputs\":[{\"internalType\":\"enum Auction.state\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelAuc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endAuc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestBidder\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestBindingBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"placeBid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"keccak256\":\"0x21a87e0a85bd99e3ade399bb52afc872e9b2660b42bebefebfcf6c6ca814ed56\",\"urls\":[\"bzz-raw://ac6a924c9cbe0118a63f7b608964cfdce0b3ca33e51e465f363e257f80af9242\",\"dweb:/ipfs/QmahsXs74CkZhPTTXx3UcygNnTPTE87e2C6rhBEXaPFnzS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Auction.sol:Auction",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "contracts/Auction.sol:Auction",
								"label": "start_time",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/Auction.sol:Auction",
								"label": "end_time",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 14,
								"contract": "contracts/Auction.sol:Auction",
								"label": "auctionState",
								"offset": 0,
								"slot": "3",
								"type": "t_enum(state)12"
							},
							{
								"astId": 16,
								"contract": "contracts/Auction.sol:Auction",
								"label": "highestBid",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 18,
								"contract": "contracts/Auction.sol:Auction",
								"label": "highestBindingBid",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 20,
								"contract": "contracts/Auction.sol:Auction",
								"label": "inc",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "contracts/Auction.sol:Auction",
								"label": "highestBidder",
								"offset": 0,
								"slot": "7",
								"type": "t_address_payable"
							},
							{
								"astId": 26,
								"contract": "contracts/Auction.sol:Auction",
								"label": "bids",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_enum(state)12": {
								"encoding": "inplace",
								"label": "enum Auction.state",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Auction.sol": {
				"ast": {
					"absolutePath": "contracts/Auction.sol",
					"exportedSymbols": {
						"Auction": [
							339
						]
					},
					"id": 340,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 339,
							"linearizedBaseContracts": [
								339
							],
							"name": "Auction",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "99:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "99:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "start_time",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "170:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "170:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "end_time",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "233:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "233:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "Auction.state",
									"id": 12,
									"members": [
										{
											"id": 8,
											"name": "Start",
											"nodeType": "EnumValue",
											"src": "314:5:0"
										},
										{
											"id": 9,
											"name": "Running",
											"nodeType": "EnumValue",
											"src": "321:7:0"
										},
										{
											"id": 10,
											"name": "End",
											"nodeType": "EnumValue",
											"src": "330:3:0"
										},
										{
											"id": 11,
											"name": "Cancel",
											"nodeType": "EnumValue",
											"src": "335:6:0"
										}
									],
									"name": "state",
									"nodeType": "EnumDefinition",
									"src": "302:40:0"
								},
								{
									"constant": false,
									"id": 14,
									"name": "auctionState",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "348:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_state_$12",
										"typeString": "enum Auction.state"
									},
									"typeName": {
										"contractScope": null,
										"id": 13,
										"name": "state",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 12,
										"src": "348:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_state_$12",
											"typeString": "enum Auction.state"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "highestBid",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "386:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "386:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"name": "highestBindingBid",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "465:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "465:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 20,
									"name": "inc",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "529:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "529:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "highestBidder",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "591:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "591:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"name": "bids",
									"nodeType": "VariableDeclaration",
									"scope": 339,
									"src": "698:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "706:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "698:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 24,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "717:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "764:356:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 29,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "777:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 30,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "785:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "785:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "777:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "777:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 34,
														"name": "auctionState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "858:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 35,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "873:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																"typeString": "type(enum Auction.state)"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Running",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "873:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"src": "858:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_state_$12",
														"typeString": "enum Auction.state"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "858:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 39,
														"name": "start_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "944:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 40,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "957:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "957:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "944:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "944:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 44,
														"name": "end_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1012:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 45,
															"name": "start_time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "1023:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "363034383030",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1036:6:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "604800"
														},
														"src": "1023:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1012:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "1012:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "inc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "1097:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "302e35",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1103:9:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000000000000000_by_1",
															"typeString": "int_const 500000000000000000"
														},
														"value": "0.5"
													},
													"src": "1097:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "1097:15:0"
											}
										]
									},
									"documentation": null,
									"id": 55,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "764:0:0"
									},
									"scope": 339,
									"src": "743:377:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1147:80:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 58,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "1166:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1166:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 60,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1180:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1166:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "6f776e65722063616e6e6f742062696421",
															"id": 62,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1187:19:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c10f3e965b3254b452711ac6c19c36484d37b199b30978c3ada83b5dcb8cb67",
																"typeString": "literal_string \"owner cannot bid!\""
															},
															"value": "owner cannot bid!"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c10f3e965b3254b452711ac6c19c36484d37b199b30978c3ada83b5dcb8cb67",
																"typeString": "literal_string \"owner cannot bid!\""
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															357,
															358
														],
														"referencedDeclaration": 358,
														"src": "1158:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1158:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "1158:49:0"
											},
											{
												"id": 65,
												"nodeType": "PlaceholderStatement",
												"src": "1218:1:0"
											}
										]
									},
									"documentation": null,
									"id": 67,
									"name": "notOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1145:2:0"
									},
									"src": "1128:99:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 77,
										"nodeType": "Block",
										"src": "1251:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 73,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 70,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "1270:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 71,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1270:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 72,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1284:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1270:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 69,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															357,
															358
														],
														"referencedDeclaration": 357,
														"src": "1262:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1262:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1262:28:0"
											},
											{
												"id": 76,
												"nodeType": "PlaceholderStatement",
												"src": "1301:1:0"
											}
										]
									},
									"documentation": null,
									"id": 78,
									"name": "Owner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1249:2:0"
									},
									"src": "1235:75:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "1336:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 81,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "1355:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1355:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 83,
																"name": "start_time",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1368:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1355:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 80,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															357,
															358
														],
														"referencedDeclaration": 357,
														"src": "1347:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1347:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "1347:32:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "1390:1:0"
											}
										]
									},
									"documentation": null,
									"id": 89,
									"name": "started",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1334:2:0"
									},
									"src": "1318:81:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 99,
										"nodeType": "Block",
										"src": "1423:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 95,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 92,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 344,
																	"src": "1442:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 93,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1442:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 94,
																"name": "end_time",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1455:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1442:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 91,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															357,
															358
														],
														"referencedDeclaration": 357,
														"src": "1434:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 96,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1434:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 97,
												"nodeType": "ExpressionStatement",
												"src": "1434:30:0"
											},
											{
												"id": 98,
												"nodeType": "PlaceholderStatement",
												"src": "1475:1:0"
											}
										]
									},
									"documentation": null,
									"id": 100,
									"name": "ended",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1421:2:0"
									},
									"src": "1407:77:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "1525:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 105,
														"name": "auctionState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1553:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 106,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1568:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																"typeString": "type(enum Auction.state)"
															}
														},
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Cancel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1568:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"src": "1553:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_state_$12",
														"typeString": "enum Auction.state"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "1553:27:0"
											}
										]
									},
									"documentation": null,
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 103,
											"modifierName": {
												"argumentTypes": null,
												"id": 102,
												"name": "Owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "1520:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1520:5:0"
										}
									],
									"name": "cancelAuc",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1510:2:0"
									},
									"returnParameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1525:0:0"
									},
									"scope": 339,
									"src": "1492:96:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "1626:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 116,
														"name": "auctionState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1637:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 117,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1652:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																"typeString": "type(enum Auction.state)"
															}
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "End",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1652:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"src": "1637:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_state_$12",
														"typeString": "enum Auction.state"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "1637:24:0"
											}
										]
									},
									"documentation": null,
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 114,
											"modifierName": {
												"argumentTypes": null,
												"id": 113,
												"name": "Owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 78,
												"src": "1621:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1621:5:0"
										}
									],
									"name": "endAuc",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1611:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1626:0:0"
									},
									"scope": 339,
									"src": "1596:73:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 141,
										"nodeType": "Block",
										"src": "1732:111:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 131,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "1747:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 132,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "1750:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1747:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 139,
													"nodeType": "Block",
													"src": "1801:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 137,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 126,
																"src": "1823:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 130,
															"id": 138,
															"nodeType": "Return",
															"src": "1816:8:0"
														}
													]
												},
												"id": 140,
												"nodeType": "IfStatement",
												"src": "1743:93:0",
												"trueBody": {
													"id": 136,
													"nodeType": "Block",
													"src": "1752:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 134,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1774:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 130,
															"id": 135,
															"nodeType": "Return",
															"src": "1767:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 142,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 124,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1690:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1690:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 126,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1698:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 125,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1698:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1689:16:0"
									},
									"returnParameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "1727:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1727:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1726:6:0"
									},
									"scope": 339,
									"src": "1677:166:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "1902:956:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_state_$12",
																"typeString": "enum Auction.state"
															},
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 150,
																"name": "auctionState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "2030:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_state_$12",
																	"typeString": "enum Auction.state"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 151,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "2046:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																		"typeString": "type(enum Auction.state)"
																	}
																},
																"id": 152,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Running",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2046:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_state_$12",
																	"typeString": "enum Auction.state"
																}
															},
															"src": "2030:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 149,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															357,
															358
														],
														"referencedDeclaration": 357,
														"src": "2022:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2022:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "2022:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 157,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 354,
																	"src": "2163:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2163:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 159,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2173:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "2163:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															357,
															358
														],
														"referencedDeclaration": 357,
														"src": "2155:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2155:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "2155:26:0"
											},
											{
												"assignments": [
													164
												],
												"declarations": [
													{
														"constant": false,
														"id": 164,
														"name": "currentbid",
														"nodeType": "VariableDeclaration",
														"scope": 220,
														"src": "2286:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 163,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2286:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 171,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 165,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2304:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 168,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 166,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "2309:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2309:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2304:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 169,
														"name": "inc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "2323:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2304:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2286:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 173,
																"name": "currentbid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 164,
																"src": "2410:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 174,
																"name": "highestBindingBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "2423:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2410:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 172,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															357,
															358
														],
														"referencedDeclaration": 357,
														"src": "2402:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2402:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "2402:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 178,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2536:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 181,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 179,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "2541:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2541:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2536:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 182,
														"name": "currentbid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2555:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2536:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "2536:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 185,
														"name": "currentbid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "2583:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 186,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2594:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 188,
														"indexExpression": {
															"argumentTypes": null,
															"id": 187,
															"name": "highestBidder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "2599:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2594:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2583:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 218,
													"nodeType": "Block",
													"src": "2717:130:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 202,
																	"name": "highestBindingBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2732:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 204,
																			"name": "currentbid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 164,
																			"src": "2756:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 209,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 205,
																					"name": "bids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 26,
																					"src": "2768:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 207,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 206,
																					"name": "highestBidder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 22,
																					"src": "2773:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2768:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 208,
																				"name": "inc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "2790:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2768:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 203,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2752:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2752:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2732:62:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 212,
															"nodeType": "ExpressionStatement",
															"src": "2732:62:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 213,
																	"name": "highestBidder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "2809:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 214,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "2825:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 215,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2825:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "2809:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 217,
															"nodeType": "ExpressionStatement",
															"src": "2809:26:0"
														}
													]
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "2580:267:0",
												"trueBody": {
													"id": 201,
													"nodeType": "Block",
													"src": "2614:89:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 190,
																	"name": "highestBindingBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2629:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 192,
																				"name": "currentbid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 164,
																				"src": "2653:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 193,
																				"name": "inc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "2666:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2653:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 195,
																				"name": "bids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "2671:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 197,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 196,
																				"name": "highestBidder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "2676:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2671:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 191,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 142,
																		"src": "2649:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2649:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2629:62:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 200,
															"nodeType": "ExpressionStatement",
															"src": "2629:62:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 145,
											"modifierName": {
												"argumentTypes": null,
												"id": 144,
												"name": "notOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 67,
												"src": "1886:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1886:8:0"
										},
										{
											"arguments": null,
											"id": 147,
											"modifierName": {
												"argumentTypes": null,
												"id": 146,
												"name": "started",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 89,
												"src": "1895:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1895:7:0"
										}
									],
									"name": "placeBid",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1868:2:0"
									},
									"returnParameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1902:0:0"
									},
									"scope": 339,
									"src": "1851:1007:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "2892:1350:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_enum$_state_$12",
																				"typeString": "enum Auction.state"
																			},
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 225,
																				"name": "auctionState",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "2914:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_state_$12",
																					"typeString": "enum Auction.state"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 226,
																					"name": "state",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 12,
																					"src": "2930:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																						"typeString": "type(enum Auction.state)"
																					}
																				},
																				"id": 227,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "Cancel",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2930:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_state_$12",
																					"typeString": "enum Auction.state"
																				}
																			},
																			"src": "2914:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 229,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2913:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_enum$_state_$12",
																				"typeString": "enum Auction.state"
																			},
																			"id": 233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 230,
																				"name": "auctionState",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "2947:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_state_$12",
																					"typeString": "enum Auction.state"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 231,
																					"name": "state",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 12,
																					"src": "2963:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																						"typeString": "type(enum Auction.state)"
																					}
																				},
																				"id": 232,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "End",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2963:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_state_$12",
																					"typeString": "enum Auction.state"
																				}
																			},
																			"src": "2947:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 234,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2946:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2913:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 236,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 344,
																				"src": "2977:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "2977:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 238,
																			"name": "end_time",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "2992:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2977:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 240,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2976:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2913:88:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 224,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															357,
															358
														],
														"referencedDeclaration": 357,
														"src": "2905:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2905:97:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "2905:97:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		"id": 248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 245,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 354,
																				"src": "3022:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 246,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3022:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 247,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3,
																			"src": "3036:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"src": "3022:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 249,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3021:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 250,
																				"name": "bids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "3047:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 253,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 251,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 354,
																					"src": "3052:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 252,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3052:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3047:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 254,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3066:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "3047:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 256,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3046:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3021:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															357,
															358
														],
														"referencedDeclaration": 357,
														"src": "3013:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3013:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "3013:56:0"
											},
											{
												"assignments": [
													261
												],
												"declarations": [
													{
														"constant": false,
														"id": 261,
														"name": "person",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "3082:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 260,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3082:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 262,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3082:22:0"
											},
											{
												"assignments": [
													264
												],
												"declarations": [
													{
														"constant": false,
														"id": 264,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 337,
														"src": "3115:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 263,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3115:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 265,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "3115:11:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_state_$12",
														"typeString": "enum Auction.state"
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 266,
														"name": "auctionState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "3232:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 267,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "3248:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																"typeString": "type(enum Auction.state)"
															}
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Cancel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3248:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"src": "3232:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 329,
													"nodeType": "Block",
													"src": "3363:768:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																"id": 286,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 283,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "3462:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3462:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 285,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "3476:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3462:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 327,
																"nodeType": "Block",
																"src": "3594:526:0",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			},
																			"id": 299,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 296,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 354,
																					"src": "3708:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 297,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3708:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 298,
																				"name": "highestBidder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "3722:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"src": "3708:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 325,
																			"nodeType": "Block",
																			"src": "3995:110:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 316,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 313,
																							"name": "person",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 261,
																							"src": "4018:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 314,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 354,
																								"src": "4027:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 315,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "4027:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"src": "4018:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"id": 317,
																					"nodeType": "ExpressionStatement",
																					"src": "4018:19:0"
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 323,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 318,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 264,
																							"src": "4060:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 319,
																								"name": "bids",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 26,
																								"src": "4069:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 322,
																							"indexExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 320,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 354,
																									"src": "4074:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 321,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "4074:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "4069:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "4060:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 324,
																					"nodeType": "ExpressionStatement",
																					"src": "4060:25:0"
																				}
																			]
																		},
																		"id": 326,
																		"nodeType": "IfStatement",
																		"src": "3705:400:0",
																		"trueBody": {
																			"id": 312,
																			"nodeType": "Block",
																			"src": "3736:150:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 302,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 300,
																							"name": "person",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 261,
																							"src": "3759:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 301,
																							"name": "highestBidder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 22,
																							"src": "3768:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"src": "3759:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"id": 303,
																					"nodeType": "ExpressionStatement",
																					"src": "3759:22:0"
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 310,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 304,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 264,
																							"src": "3804:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 309,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"baseExpression": {
																									"argumentTypes": null,
																									"id": 305,
																									"name": "bids",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 26,
																									"src": "3813:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 307,
																								"indexExpression": {
																									"argumentTypes": null,
																									"id": 306,
																									"name": "highestBidder",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 22,
																									"src": "3818:13:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3813:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 308,
																								"name": "highestBindingBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 18,
																								"src": "3835:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3813:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3804:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 311,
																					"nodeType": "ExpressionStatement",
																					"src": "3804:48:0"
																				}
																			]
																		}
																	}
																]
															},
															"id": 328,
															"nodeType": "IfStatement",
															"src": "3459:661:0",
															"trueBody": {
																"id": 295,
																"nodeType": "Block",
																"src": "3482:94:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 287,
																				"name": "person",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 261,
																				"src": "3501:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 288,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3,
																				"src": "3510:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"src": "3501:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 290,
																		"nodeType": "ExpressionStatement",
																		"src": "3501:14:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 291,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 264,
																				"src": "3534:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 292,
																				"name": "highestBindingBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 18,
																				"src": "3543:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3534:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 294,
																		"nodeType": "ExpressionStatement",
																		"src": "3534:26:0"
																	}
																]
															}
														}
													]
												},
												"id": 330,
												"nodeType": "IfStatement",
												"src": "3229:902:0",
												"trueBody": {
													"id": 282,
													"nodeType": "Block",
													"src": "3261:86:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 270,
																	"name": "person",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 261,
																	"src": "3276:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 271,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 354,
																		"src": "3285:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 272,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3285:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3276:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 274,
															"nodeType": "ExpressionStatement",
															"src": "3276:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 275,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 264,
																	"src": "3310:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 276,
																		"name": "bids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "3319:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 279,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 277,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 354,
																			"src": "3324:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 278,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3324:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3319:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3310:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 281,
															"nodeType": "ExpressionStatement",
															"src": "3310:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 334,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 264,
															"src": "4225:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 331,
															"name": "person",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 261,
															"src": "4209:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "4209:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4209:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "4209:23:0"
											}
										]
									},
									"documentation": null,
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2883:2:0"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2892:0:0"
									},
									"scope": 339,
									"src": "2866:1376:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 340,
							"src": "35:4212:0"
						}
					],
					"src": "0:4247:0"
				},
				"id": 0
			}
		}
	}
}