{
	"id": "e2eb3990d1276702ea43e27934b24cc1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.17",
	"solcLongVersion": "0.5.17+commit.d19bba13",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Auction.sol": {
				"content": "pragma solidity >=0.5.0 <0.9.0;\r\n\r\ncontract Auction{\r\n\r\n    // the one who starts the auction\r\n    address payable public owner;\r\n\r\n    // start time of the auction\r\n    uint public start_time;\r\n\r\n    // end time of the auction\r\n    uint public end_time;\r\n\r\n    // declaring state for the auction\r\n    enum state {Start, Running, End, Cancel}\r\n    state public auctionState;\r\n    \r\n    uint public highestBid;\r\n\r\n    // highest bid from the other participants\r\n    uint public highestBindingBid;\r\n\r\n    // increment of bids\r\n    uint public inc;\r\n\r\n    // highest bidder in the auction\r\n    address payable public highestBidder;\r\n\r\n    // storing values of bid against participant's addresses\r\n    mapping(address => uint) public bids;\r\n\r\n    constructor() public {\r\n        owner = msg.sender;\r\n        auctionState = state.Running;\r\n        start_time = block.number;\r\n        end_time = start_time + 604800;\r\n        inc = 0.5 ether;\r\n    }\r\n\r\n    modifier notOwner(){\r\n        require(msg.sender != owner);\r\n        _;\r\n    }\r\n\r\n    modifier Owner(){\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n\r\n    modifier started(){\r\n        require(block.number>start_time);\r\n        _;\r\n    }\r\n\r\n    modifier ended(){\r\n        require(block.number<end_time);\r\n        _;\r\n    }\r\n\r\n    function cancelAuc() public Owner{\r\n        auctionState = state.Cancel;\r\n    }\r\n\r\n    function endAuc() public Owner{\r\n        auctionState = state.End;\r\n    }\r\n\r\n    function min(uint a, uint b) pure private returns(uint){\r\n        if (a<=b){\r\n            return a;\r\n        }\r\n        else{\r\n            return b;\r\n        }\r\n    }\r\n\r\n    function placeBid() payable public notOwner started{\r\n\r\n        // auction should be in a running state to place bid\r\n        require(auctionState == state.Running);\r\n\r\n        // the bid placed should be more than the increment declared i.e 1 ether\r\n        require(msg.value>1 ether);\r\n\r\n        // current bid will be stored by acquiring participant's amount plus bid increment\r\n        uint currentbid = bids[msg.sender] + inc;\r\n\r\n        // if current bid is greater than highest payable bid\r\n        require(currentbid > highestBindingBid);\r\n\r\n        // it will be added in the bids record against the participant's address\r\n        bids[msg.sender] = currentbid;\r\n\r\n\r\n        if(currentbid<bids[highestBidder]){\r\n            highestBindingBid = min(currentbid + inc, bids[highestBidder]);\r\n        }\r\n        else{\r\n            highestBindingBid = min(currentbid, bids[highestBidder] + inc);\r\n            highestBidder = msg.sender;\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function withdraw() public{\r\n\r\n        require((auctionState == state.Cancel) ||(auctionState == state.End)|| (block.number > end_time));\r\n        require((msg.sender == owner) || (bids[msg.sender] > 0));\r\n\r\n        address payable person;\r\n        uint amount;\r\n\r\n        // if the auction gets cancelled all the amount will be send back to the bidders\r\n        if(auctionState == state.Cancel){\r\n            person = msg.sender;\r\n            amount = bids[msg.sender];\r\n        }\r\n\r\n        else{\r\n\r\n            // if the auction ends then owner will get the highet payable bid\r\n            if(msg.sender == owner){\r\n                person = owner;\r\n                amount = highestBindingBid;\r\n            }\r\n            else{\r\n\r\n                // if it's the highest bidder then it will get his remaining amount back\r\n                if(msg.sender == highestBidder){\r\n                    person = highestBidder;\r\n                    amount = bids[highestBidder] - highestBindingBid;              \r\n                }\r\n\r\n                // if the remaining bidders end it they will get their amounts back\r\n                else{\r\n                    person = msg.sender;\r\n                    amount = bids[msg.sender];\r\n                }\r\n            }\r\n        }\r\n\r\n        person.transfer(amount);\r\n\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Auction.sol": {
				"Auction": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "auctionState",
							"outputs": [
								{
									"internalType": "enum Auction.state",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "bids",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "cancelAuc",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "endAuc",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "end_time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "highestBid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "highestBidder",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "highestBindingBid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "inc",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address payable",
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "placeBid",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "start_time",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/Auction.sol\":35:3921  contract Auction{\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Auction.sol\":743:943  constructor() public {\r... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n    /* \"contracts/Auction.sol\":743:943  constructor() public {\r... */\n  pop\n    /* \"contracts/Auction.sol\":783:793  msg.sender */\n  caller\n    /* \"contracts/Auction.sol\":775:780  owner */\n  0x00\n  dup1\n    /* \"contracts/Auction.sol\":775:793  owner = msg.sender */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":819:832  state.Running */\n  0x01\n    /* \"contracts/Auction.sol\":804:816  auctionState */\n  0x03\n  0x00\n    /* \"contracts/Auction.sol\":804:832  auctionState = state.Running */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0x03\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  invalid\ntag_4:\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":856:868  block.number */\n  number\n    /* \"contracts/Auction.sol\":843:853  start_time */\n  0x01\n    /* \"contracts/Auction.sol\":843:868  start_time = block.number */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":903:909  604800 */\n  0x093a80\n    /* \"contracts/Auction.sol\":890:900  start_time */\n  sload(0x01)\n    /* \"contracts/Auction.sol\":890:909  start_time + 604800 */\n  add\n    /* \"contracts/Auction.sol\":879:887  end_time */\n  0x02\n    /* \"contracts/Auction.sol\":879:909  end_time = start_time + 604800 */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":926:935  0.5 ether */\n  0x06f05b59d3b20000\n    /* \"contracts/Auction.sol\":920:923  inc */\n  0x06\n    /* \"contracts/Auction.sol\":920:935  inc = 0.5 ether */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Auction.sol\":35:3921  contract Auction{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Auction.sol\":35:3921  contract Auction{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7fb45099\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x91f90157\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x91f90157\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xd57bde79\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xecfc7ecc\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xf5b56c56\n      eq\n      tag_14\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x7fb45099\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x834ee417\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      jump(tag_1)\n    tag_15:\n      dup1\n      0x16243356\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x2352f320\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x371303c0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3ccfd60b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3fdceefd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x62ea82db\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Auction.sol\":233:253  uint public end_time */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_17\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_17:\n        /* \"contracts/Auction.sol\":233:253  uint public end_time */\n      pop\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":1294:1373  function cancelAuc() public Owner{\r... */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_20\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_20:\n        /* \"contracts/Auction.sol\":1294:1373  function cancelAuc() public Owner{\r... */\n      pop\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/Auction.sol\":529:544  uint public inc */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"contracts/Auction.sol\":529:544  uint public inc */\n      pop\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":2606:3916  function withdraw() public{\r... */\n    tag_5:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_26\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_26:\n        /* \"contracts/Auction.sol\":2606:3916  function withdraw() public{\r... */\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      stop\n        /* \"contracts/Auction.sol\":1381:1454  function endAuc() public Owner{\r... */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_29\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_29:\n        /* \"contracts/Auction.sol\":1381:1454  function endAuc() public Owner{\r... */\n      pop\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/Auction.sol\":698:734  mapping(address => uint) public bids */\n    tag_7:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_32\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_32:\n        /* \"contracts/Auction.sol\":698:734  mapping(address => uint) public bids */\n      pop\n      tag_33\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_34\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_34:\n        /* \"contracts/Auction.sol\":698:734  mapping(address => uint) public bids */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_35\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":348:373  state public auctionState */\n    tag_8:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_36\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_36:\n        /* \"contracts/Auction.sol\":348:373  state public auctionState */\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      dup3\n      0x03\n      dup2\n      gt\n      iszero\n      tag_39\n      jumpi\n      invalid\n    tag_39:\n      0xff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":170:192  uint public start_time */\n    tag_9:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_40\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_40:\n        /* \"contracts/Auction.sol\":170:192  uint public start_time */\n      pop\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":99:127  address payable public owner */\n    tag_10:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_43\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_43:\n        /* \"contracts/Auction.sol\":99:127  address payable public owner */\n      pop\n      tag_44\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":591:627  address payable public highestBidder */\n    tag_11:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_46\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_46:\n        /* \"contracts/Auction.sol\":591:627  address payable public highestBidder */\n      pop\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":386:408  uint public highestBid */\n    tag_12:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_49\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_49:\n        /* \"contracts/Auction.sol\":386:408  uint public highestBid */\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":1636:2598  function placeBid() payable public notOwner started{\r... */\n    tag_13:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/Auction.sol\":465:494  uint public highestBindingBid */\n    tag_14:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_54:\n        /* \"contracts/Auction.sol\":465:494  uint public highestBindingBid */\n      pop\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Auction.sol\":233:253  uint public end_time */\n    tag_19:\n      sload(0x02)\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":1294:1373  function cancelAuc() public Owner{\r... */\n    tag_22:\n        /* \"contracts/Auction.sol\":1086:1091  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1072:1091  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1072:1082  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":1072:1091  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":1064:1092  require(msg.sender == owner) */\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n        /* \"contracts/Auction.sol\":1353:1365  state.Cancel */\n      0x03\n        /* \"contracts/Auction.sol\":1338:1350  auctionState */\n      dup1\n      0x00\n        /* \"contracts/Auction.sol\":1338:1365  auctionState = state.Cancel */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_60\n      jumpi\n      invalid\n    tag_60:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":1294:1373  function cancelAuc() public Owner{\r... */\n      jump\t// out\n        /* \"contracts/Auction.sol\":529:544  uint public inc */\n    tag_25:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":2606:3916  function withdraw() public{\r... */\n    tag_28:\n        /* \"contracts/Auction.sol\":2670:2682  state.Cancel */\n      0x03\n        /* \"contracts/Auction.sol\":2654:2682  auctionState == state.Cancel */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_62\n      jumpi\n      invalid\n    tag_62:\n        /* \"contracts/Auction.sol\":2654:2666  auctionState */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auction.sol\":2654:2682  auctionState == state.Cancel */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_63\n      jumpi\n      invalid\n    tag_63:\n      eq\n        /* \"contracts/Auction.sol\":2653:2713  (auctionState == state.Cancel) ||(auctionState == state.End) */\n      dup1\n      tag_64\n      jumpi\n      pop\n        /* \"contracts/Auction.sol\":2703:2712  state.End */\n      0x02\n        /* \"contracts/Auction.sol\":2687:2712  auctionState == state.End */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_65\n      jumpi\n      invalid\n    tag_65:\n        /* \"contracts/Auction.sol\":2687:2699  auctionState */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auction.sol\":2687:2712  auctionState == state.End */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_66\n      jumpi\n      invalid\n    tag_66:\n      eq\n        /* \"contracts/Auction.sol\":2653:2713  (auctionState == state.Cancel) ||(auctionState == state.End) */\n    tag_64:\n        /* \"contracts/Auction.sol\":2653:2741  (auctionState == state.Cancel) ||(auctionState == state.End)|| (block.number > end_time) */\n      dup1\n      tag_67\n      jumpi\n      pop\n        /* \"contracts/Auction.sol\":2732:2740  end_time */\n      sload(0x02)\n        /* \"contracts/Auction.sol\":2717:2729  block.number */\n      number\n        /* \"contracts/Auction.sol\":2717:2740  block.number > end_time */\n      gt\n        /* \"contracts/Auction.sol\":2653:2741  (auctionState == state.Cancel) ||(auctionState == state.End)|| (block.number > end_time) */\n    tag_67:\n        /* \"contracts/Auction.sol\":2645:2742  require((auctionState == state.Cancel) ||(auctionState == state.End)|| (block.number > end_time)) */\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n        /* \"contracts/Auction.sol\":2776:2781  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":2762:2781  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":2762:2772  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":2762:2781  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":2761:2808  (msg.sender == owner) || (bids[msg.sender] > 0) */\n      dup1\n      tag_69\n      jumpi\n      pop\n        /* \"contracts/Auction.sol\":2806:2807  0 */\n      0x00\n        /* \"contracts/Auction.sol\":2787:2791  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2787:2803  bids[msg.sender] */\n      0x00\n        /* \"contracts/Auction.sol\":2792:2802  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":2787:2803  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":2787:2807  bids[msg.sender] > 0 */\n      gt\n        /* \"contracts/Auction.sol\":2761:2808  (msg.sender == owner) || (bids[msg.sender] > 0) */\n    tag_69:\n        /* \"contracts/Auction.sol\":2753:2809  require((msg.sender == owner) || (bids[msg.sender] > 0)) */\n      tag_70\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_70:\n        /* \"contracts/Auction.sol\":2822:2844  address payable person */\n      0x00\n        /* \"contracts/Auction.sol\":2855:2866  uint amount */\n      dup1\n        /* \"contracts/Auction.sol\":2988:3000  state.Cancel */\n      0x03\n        /* \"contracts/Auction.sol\":2972:3000  auctionState == state.Cancel */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_71\n      jumpi\n      invalid\n    tag_71:\n        /* \"contracts/Auction.sol\":2972:2984  auctionState */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auction.sol\":2972:3000  auctionState == state.Cancel */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_72\n      jumpi\n      invalid\n    tag_72:\n      eq\n        /* \"contracts/Auction.sol\":2969:3871  if(auctionState == state.Cancel){\r... */\n      iszero\n      tag_73\n      jumpi\n        /* \"contracts/Auction.sol\":3025:3035  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3016:3035  person = msg.sender */\n      swap2\n      pop\n        /* \"contracts/Auction.sol\":3059:3063  bids */\n      0x08\n        /* \"contracts/Auction.sol\":3059:3075  bids[msg.sender] */\n      0x00\n        /* \"contracts/Auction.sol\":3064:3074  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3059:3075  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":3050:3075  amount = bids[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":2969:3871  if(auctionState == state.Cancel){\r... */\n      jump(tag_74)\n    tag_73:\n        /* \"contracts/Auction.sol\":3216:3221  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3202:3221  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3202:3212  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3202:3221  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":3199:3860  if(msg.sender == owner){\r... */\n      iszero\n      tag_75\n      jumpi\n        /* \"contracts/Auction.sol\":3250:3255  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3241:3255  person = owner */\n      swap2\n      pop\n        /* \"contracts/Auction.sol\":3283:3300  highestBindingBid */\n      sload(0x05)\n        /* \"contracts/Auction.sol\":3274:3300  amount = highestBindingBid */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":3199:3860  if(msg.sender == owner){\r... */\n      jump(tag_76)\n    tag_75:\n        /* \"contracts/Auction.sol\":3462:3475  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3448:3475  msg.sender == highestBidder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3448:3458  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3448:3475  msg.sender == highestBidder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":3445:3845  if(msg.sender == highestBidder){\r... */\n      iszero\n      tag_77\n      jumpi\n        /* \"contracts/Auction.sol\":3508:3521  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3499:3521  person = highestBidder */\n      swap2\n      pop\n        /* \"contracts/Auction.sol\":3575:3592  highestBindingBid */\n      sload(0x05)\n        /* \"contracts/Auction.sol\":3553:3557  bids */\n      0x08\n        /* \"contracts/Auction.sol\":3553:3572  bids[highestBidder] */\n      0x00\n        /* \"contracts/Auction.sol\":3558:3571  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3553:3572  bids[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":3553:3592  bids[highestBidder] - highestBindingBid */\n      sub\n        /* \"contracts/Auction.sol\":3544:3592  amount = bids[highestBidder] - highestBindingBid */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":3445:3845  if(msg.sender == highestBidder){\r... */\n      jump(tag_78)\n    tag_77:\n        /* \"contracts/Auction.sol\":3767:3777  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3758:3777  person = msg.sender */\n      swap2\n      pop\n        /* \"contracts/Auction.sol\":3809:3813  bids */\n      0x08\n        /* \"contracts/Auction.sol\":3809:3825  bids[msg.sender] */\n      0x00\n        /* \"contracts/Auction.sol\":3814:3824  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":3809:3825  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":3800:3825  amount = bids[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":3445:3845  if(msg.sender == highestBidder){\r... */\n    tag_78:\n        /* \"contracts/Auction.sol\":3199:3860  if(msg.sender == owner){\r... */\n    tag_76:\n        /* \"contracts/Auction.sol\":2969:3871  if(auctionState == state.Cancel){\r... */\n    tag_74:\n        /* \"contracts/Auction.sol\":3883:3889  person */\n      dup2\n        /* \"contracts/Auction.sol\":3883:3898  person.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":3883:3906  person.transfer(amount) */\n      0x08fc\n        /* \"contracts/Auction.sol\":3899:3905  amount */\n      dup3\n        /* \"contracts/Auction.sol\":3883:3906  person.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_79\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_79:\n        /* \"contracts/Auction.sol\":3883:3906  person.transfer(amount) */\n      pop\n        /* \"contracts/Auction.sol\":2606:3916  function withdraw() public{\r... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Auction.sol\":1381:1454  function endAuc() public Owner{\r... */\n    tag_31:\n        /* \"contracts/Auction.sol\":1086:1091  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1072:1091  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":1072:1082  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":1072:1091  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Auction.sol\":1064:1092  require(msg.sender == owner) */\n      tag_81\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_81:\n        /* \"contracts/Auction.sol\":1437:1446  state.End */\n      0x02\n        /* \"contracts/Auction.sol\":1422:1434  auctionState */\n      0x03\n      0x00\n        /* \"contracts/Auction.sol\":1422:1446  auctionState = state.End */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_83\n      jumpi\n      invalid\n    tag_83:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":1381:1454  function endAuc() public Owner{\r... */\n      jump\t// out\n        /* \"contracts/Auction.sol\":698:734  mapping(address => uint) public bids */\n    tag_35:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":348:373  state public auctionState */\n    tag_38:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":170:192  uint public start_time */\n    tag_42:\n      sload(0x01)\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":99:127  address payable public owner */\n    tag_45:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":591:627  address payable public highestBidder */\n    tag_48:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":386:408  uint public highestBid */\n    tag_51:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":1636:2598  function placeBid() payable public notOwner started{\r... */\n    tag_53:\n        /* \"contracts/Auction.sol\":1003:1008  owner */\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":989:1008  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":989:999  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":989:1008  msg.sender != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"contracts/Auction.sol\":981:1009  require(msg.sender != owner) */\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n        /* \"contracts/Auction.sol\":1170:1180  start_time */\n      sload(0x01)\n        /* \"contracts/Auction.sol\":1157:1169  block.number */\n      number\n        /* \"contracts/Auction.sol\":1157:1180  block.number>start_time */\n      gt\n        /* \"contracts/Auction.sol\":1149:1181  require(block.number>start_time) */\n      tag_87\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_87:\n        /* \"contracts/Auction.sol\":1786:1799  state.Running */\n      0x01\n        /* \"contracts/Auction.sol\":1770:1799  auctionState == state.Running */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_89\n      jumpi\n      invalid\n    tag_89:\n        /* \"contracts/Auction.sol\":1770:1782  auctionState */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/Auction.sol\":1770:1799  auctionState == state.Running */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_90\n      jumpi\n      invalid\n    tag_90:\n      eq\n        /* \"contracts/Auction.sol\":1762:1800  require(auctionState == state.Running) */\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n        /* \"contracts/Auction.sol\":1913:1920  1 ether */\n      0x0de0b6b3a7640000\n        /* \"contracts/Auction.sol\":1903:1912  msg.value */\n      callvalue\n        /* \"contracts/Auction.sol\":1903:1920  msg.value>1 ether */\n      gt\n        /* \"contracts/Auction.sol\":1895:1921  require(msg.value>1 ether) */\n      tag_92\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_92:\n        /* \"contracts/Auction.sol\":2026:2041  uint currentbid */\n      0x00\n        /* \"contracts/Auction.sol\":2063:2066  inc */\n      sload(0x06)\n        /* \"contracts/Auction.sol\":2044:2048  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2044:2060  bids[msg.sender] */\n      0x00\n        /* \"contracts/Auction.sol\":2049:2059  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":2044:2060  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":2044:2066  bids[msg.sender] + inc */\n      add\n        /* \"contracts/Auction.sol\":2026:2066  uint currentbid = bids[msg.sender] + inc */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":2163:2180  highestBindingBid */\n      sload(0x05)\n        /* \"contracts/Auction.sol\":2150:2160  currentbid */\n      dup2\n        /* \"contracts/Auction.sol\":2150:2180  currentbid > highestBindingBid */\n      gt\n        /* \"contracts/Auction.sol\":2142:2181  require(currentbid > highestBindingBid) */\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n        /* \"contracts/Auction.sol\":2295:2305  currentbid */\n      dup1\n        /* \"contracts/Auction.sol\":2276:2280  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2276:2292  bids[msg.sender] */\n      0x00\n        /* \"contracts/Auction.sol\":2281:2291  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":2276:2292  bids[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Auction.sol\":2276:2305  bids[msg.sender] = currentbid */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":2334:2338  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2334:2353  bids[highestBidder] */\n      0x00\n        /* \"contracts/Auction.sol\":2339:2352  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":2334:2353  bids[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":2323:2333  currentbid */\n      dup2\n        /* \"contracts/Auction.sol\":2323:2353  currentbid<bids[highestBidder] */\n      lt\n        /* \"contracts/Auction.sol\":2320:2587  if(currentbid<bids[highestBidder]){\r... */\n      iszero\n      tag_94\n      jumpi\n        /* \"contracts/Auction.sol\":2389:2431  min(currentbid + inc, bids[highestBidder]) */\n      tag_95\n        /* \"contracts/Auction.sol\":2406:2409  inc */\n      sload(0x06)\n        /* \"contracts/Auction.sol\":2393:2403  currentbid */\n      dup3\n        /* \"contracts/Auction.sol\":2393:2409  currentbid + inc */\n      add\n        /* \"contracts/Auction.sol\":2411:2415  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2411:2430  bids[highestBidder] */\n      0x00\n        /* \"contracts/Auction.sol\":2416:2429  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":2411:2430  bids[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":2389:2392  min */\n      tag_96\n        /* \"contracts/Auction.sol\":2389:2431  min(currentbid + inc, bids[highestBidder]) */\n      jump\t// in\n    tag_95:\n        /* \"contracts/Auction.sol\":2369:2386  highestBindingBid */\n      0x05\n        /* \"contracts/Auction.sol\":2369:2431  highestBindingBid = min(currentbid + inc, bids[highestBidder]) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":2320:2587  if(currentbid<bids[highestBidder]){\r... */\n      jump(tag_97)\n    tag_94:\n        /* \"contracts/Auction.sol\":2492:2534  min(currentbid, bids[highestBidder] + inc) */\n      tag_98\n        /* \"contracts/Auction.sol\":2496:2506  currentbid */\n      dup2\n        /* \"contracts/Auction.sol\":2530:2533  inc */\n      sload(0x06)\n        /* \"contracts/Auction.sol\":2508:2512  bids */\n      0x08\n        /* \"contracts/Auction.sol\":2508:2527  bids[highestBidder] */\n      0x00\n        /* \"contracts/Auction.sol\":2513:2526  highestBidder */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Auction.sol\":2508:2527  bids[highestBidder] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Auction.sol\":2508:2533  bids[highestBidder] + inc */\n      add\n        /* \"contracts/Auction.sol\":2492:2495  min */\n      tag_96\n        /* \"contracts/Auction.sol\":2492:2534  min(currentbid, bids[highestBidder] + inc) */\n      jump\t// in\n    tag_98:\n        /* \"contracts/Auction.sol\":2472:2489  highestBindingBid */\n      0x05\n        /* \"contracts/Auction.sol\":2472:2534  highestBindingBid = min(currentbid, bids[highestBidder] + inc) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":2565:2575  msg.sender */\n      caller\n        /* \"contracts/Auction.sol\":2549:2562  highestBidder */\n      0x07\n      0x00\n        /* \"contracts/Auction.sol\":2549:2575  highestBidder = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Auction.sol\":2320:2587  if(currentbid<bids[highestBidder]){\r... */\n    tag_97:\n        /* \"contracts/Auction.sol\":1192:1193  _ */\n      pop\n        /* \"contracts/Auction.sol\":1636:2598  function placeBid() payable public notOwner started{\r... */\n      jump\t// out\n        /* \"contracts/Auction.sol\":465:494  uint public highestBindingBid */\n    tag_56:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"contracts/Auction.sol\":1462:1628  function min(uint a, uint b) pure private returns(uint){\r... */\n    tag_96:\n        /* \"contracts/Auction.sol\":1512:1516  uint */\n      0x00\n        /* \"contracts/Auction.sol\":1535:1536  b */\n      dup2\n        /* \"contracts/Auction.sol\":1532:1533  a */\n      dup4\n        /* \"contracts/Auction.sol\":1532:1536  a<=b */\n      gt\n        /* \"contracts/Auction.sol\":1528:1621  if (a<=b){\r... */\n      tag_100\n      jumpi\n        /* \"contracts/Auction.sol\":1559:1560  a */\n      dup3\n        /* \"contracts/Auction.sol\":1552:1560  return a */\n      swap1\n      pop\n      jump(tag_99)\n        /* \"contracts/Auction.sol\":1528:1621  if (a<=b){\r... */\n    tag_100:\n        /* \"contracts/Auction.sol\":1608:1609  b */\n      dup2\n        /* \"contracts/Auction.sol\":1601:1609  return b */\n      swap1\n      pop\n        /* \"contracts/Auction.sol\":1462:1628  function min(uint a, uint b) pure private returns(uint){\r... */\n    tag_99:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa265627a7a723158204882963fc2347309802cfaa955491349dcb96c228b3dc06238e983e9121ba64164736f6c63430005110032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360006101000a81548160ff0219169083600381111561007057fe5b02179055504360018190555062093a80600154016002819055506706f05b59d3b20000600681905550610b87806100a86000396000f3fe6080604052600436106100c25760003560e01c80637fb450991161007f57806391f901571161005957806391f9015714610282578063d57bde79146102d9578063ecfc7ecc14610304578063f5b56c561461030e576100c2565b80637fb45099146101c7578063834ee417146102005780638da5cb5b1461022b576100c2565b806316243356146100c75780632352f320146100f2578063371303c0146101095780633ccfd60b146101345780633fdceefd1461014b57806362ea82db14610162575b600080fd5b3480156100d357600080fd5b506100dc610339565b6040518082815260200191505060405180910390f35b3480156100fe57600080fd5b5061010761033f565b005b34801561011557600080fd5b5061011e6103bd565b6040518082815260200191505060405180910390f35b34801561014057600080fd5b506101496103c3565b005b34801561015757600080fd5b5061016061074b565b005b34801561016e57600080fd5b506101b16004803603602081101561018557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ca565b6040518082815260200191505060405180910390f35b3480156101d357600080fd5b506101dc6107e2565b604051808260038111156101ec57fe5b60ff16815260200191505060405180910390f35b34801561020c57600080fd5b506102156107f5565b6040518082815260200191505060405180910390f35b34801561023757600080fd5b506102406107fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028e57600080fd5b50610297610820565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e557600080fd5b506102ee610846565b6040518082815260200191505060405180910390f35b61030c61084c565b005b34801561031a57600080fd5b50610323610b31565b6040518082815260200191505060405180910390f35b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039857600080fd5b60038060006101000a81548160ff021916908360038111156103b657fe5b0217905550565b60065481565b6003808111156103cf57fe5b600360009054906101000a900460ff1660038111156103ea57fe5b148061041b5750600260038111156103fe57fe5b600360009054906101000a900460ff16600381111561041957fe5b145b80610427575060025443115b61043057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104ca57506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6104d357600080fd5b6000806003808111156104e257fe5b600360009054906101000a900460ff1660038111156104fd57fe5b141561054d57339150600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610700565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105d0576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055490506106ff565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156106b857600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540390506106fe565b339150600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b5b5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610746573d6000803e3d6000fd5b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a457600080fd5b6002600360006101000a81548160ff021916908360038111156107c357fe5b0217905550565b60086020528060005260406000206000915090505481565b600360009054906101000a900460ff1681565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108a657600080fd5b60015443116108b457600080fd5b600160038111156108c157fe5b600360009054906101000a900460ff1660038111156108dc57fe5b146108e657600080fd5b670de0b6b3a764000034116108fa57600080fd5b6000600654600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054019050600554811161095057600080fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811015610a7757610a6c600654820160086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b37565b600581905550610b2e565b610ae68160065460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401610b37565b60058190555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60055481565b6000818311610b4857829050610b4c565b8190505b9291505056fea265627a7a723158204882963fc2347309802cfaa955491349dcb96c228b3dc06238e983e9121ba64164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x70 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP NUMBER PUSH1 0x1 DUP2 SWAP1 SSTORE POP PUSH3 0x93A80 PUSH1 0x1 SLOAD ADD PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH8 0x6F05B59D3B20000 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH2 0xB87 DUP1 PUSH2 0xA8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FB45099 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x91F90157 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xECFC7ECC EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xF5B56C56 EQ PUSH2 0x30E JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x7FB45099 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x834EE417 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22B JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x16243356 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x2352F320 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x371303C0 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x3FDCEEFD EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x74B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x84C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B6 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x3CF JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3EA JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x41B JUMPI POP PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3FE JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x419 JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x427 JUMPI POP PUSH1 0x2 SLOAD NUMBER GT JUMPDEST PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x4CA JUMPI POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT JUMPDEST PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x4E2 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x54D JUMPI CALLER SWAP2 POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x700 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB SWAP1 POP PUSH2 0x6FE JUMP JUMPDEST CALLER SWAP2 POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7C3 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER GT PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8C1 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8DC JUMPI INVALID JUMPDEST EQ PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE GT PUSH2 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xA77 JUMPI PUSH2 0xA6C PUSH1 0x6 SLOAD DUP3 ADD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xB2E JUMP JUMPDEST PUSH2 0xAE6 DUP2 PUSH1 0x6 SLOAD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0xB48 JUMPI DUP3 SWAP1 POP PUSH2 0xB4C JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x48 DUP3 SWAP7 EXTCODEHASH 0xC2 CALLVALUE PUSH20 0x9802CFAA955491349DCB96C228B3DC06238E983 0xE9 SLT SHL 0xA6 COINBASE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "35:3886:0:-;;;743:200;8:9:-1;5:2;;;30:1;27;20:12;5:2;743:200:0;783:10;775:5;;:18;;;;;;;;;;;;;;;;;;819:13;804:12;;:28;;;;;;;;;;;;;;;;;;;;;;;;856:12;843:10;:25;;;;903:6;890:10;;:19;879:8;:30;;;;926:9;920:3;:15;;;;35:3886;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "6080604052600436106100c25760003560e01c80637fb450991161007f57806391f901571161005957806391f9015714610282578063d57bde79146102d9578063ecfc7ecc14610304578063f5b56c561461030e576100c2565b80637fb45099146101c7578063834ee417146102005780638da5cb5b1461022b576100c2565b806316243356146100c75780632352f320146100f2578063371303c0146101095780633ccfd60b146101345780633fdceefd1461014b57806362ea82db14610162575b600080fd5b3480156100d357600080fd5b506100dc610339565b6040518082815260200191505060405180910390f35b3480156100fe57600080fd5b5061010761033f565b005b34801561011557600080fd5b5061011e6103bd565b6040518082815260200191505060405180910390f35b34801561014057600080fd5b506101496103c3565b005b34801561015757600080fd5b5061016061074b565b005b34801561016e57600080fd5b506101b16004803603602081101561018557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107ca565b6040518082815260200191505060405180910390f35b3480156101d357600080fd5b506101dc6107e2565b604051808260038111156101ec57fe5b60ff16815260200191505060405180910390f35b34801561020c57600080fd5b506102156107f5565b6040518082815260200191505060405180910390f35b34801561023757600080fd5b506102406107fb565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34801561028e57600080fd5b50610297610820565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156102e557600080fd5b506102ee610846565b6040518082815260200191505060405180910390f35b61030c61084c565b005b34801561031a57600080fd5b50610323610b31565b6040518082815260200191505060405180910390f35b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461039857600080fd5b60038060006101000a81548160ff021916908360038111156103b657fe5b0217905550565b60065481565b6003808111156103cf57fe5b600360009054906101000a900460ff1660038111156103ea57fe5b148061041b5750600260038111156103fe57fe5b600360009054906101000a900460ff16600381111561041957fe5b145b80610427575060025443115b61043057600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806104ca57506000600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054115b6104d357600080fd5b6000806003808111156104e257fe5b600360009054906101000a900460ff1660038111156104fd57fe5b141561054d57339150600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050610700565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156105d0576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055490506106ff565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156106b857600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915060055460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020540390506106fe565b339150600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490505b5b5b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610746573d6000803e3d6000fd5b505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146107a457600080fd5b6002600360006101000a81548160ff021916908360038111156107c357fe5b0217905550565b60086020528060005260406000206000915090505481565b600360009054906101000a900460ff1681565b60015481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60045481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614156108a657600080fd5b60015443116108b457600080fd5b600160038111156108c157fe5b600360009054906101000a900460ff1660038111156108dc57fe5b146108e657600080fd5b670de0b6b3a764000034116108fa57600080fd5b6000600654600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054019050600554811161095057600080fd5b80600860003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054811015610a7757610a6c600654820160086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610b37565b600581905550610b2e565b610ae68160065460086000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205401610b37565b60058190555033600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b60055481565b6000818311610b4857829050610b4c565b8190505b9291505056fea265627a7a723158204882963fc2347309802cfaa955491349dcb96c228b3dc06238e983e9121ba64164736f6c63430005110032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xC2 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7FB45099 GT PUSH2 0x7F JUMPI DUP1 PUSH4 0x91F90157 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x91F90157 EQ PUSH2 0x282 JUMPI DUP1 PUSH4 0xD57BDE79 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xECFC7ECC EQ PUSH2 0x304 JUMPI DUP1 PUSH4 0xF5B56C56 EQ PUSH2 0x30E JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x7FB45099 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x834EE417 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22B JUMPI PUSH2 0xC2 JUMP JUMPDEST DUP1 PUSH4 0x16243356 EQ PUSH2 0xC7 JUMPI DUP1 PUSH4 0x2352F320 EQ PUSH2 0xF2 JUMPI DUP1 PUSH4 0x371303C0 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x134 JUMPI DUP1 PUSH4 0x3FDCEEFD EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x62EA82DB EQ PUSH2 0x162 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xDC PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x107 PUSH2 0x33F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x115 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x11E PUSH2 0x3BD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x149 PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x157 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x160 PUSH2 0x74B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x185 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x7CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x7E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1EC JUMPI INVALID JUMPDEST PUSH1 0xFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x215 PUSH2 0x7F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0x7FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x297 PUSH2 0x820 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2EE PUSH2 0x846 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH2 0x84C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x323 PUSH2 0xB31 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x398 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 DUP1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3B6 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x3CF JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3EA JUMPI INVALID JUMPDEST EQ DUP1 PUSH2 0x41B JUMPI POP PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3FE JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x419 JUMPI INVALID JUMPDEST EQ JUMPDEST DUP1 PUSH2 0x427 JUMPI POP PUSH1 0x2 SLOAD NUMBER GT JUMPDEST PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x4CA JUMPI POP PUSH1 0x0 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD GT JUMPDEST PUSH2 0x4D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x4E2 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x4FD JUMPI INVALID JUMPDEST EQ ISZERO PUSH2 0x54D JUMPI CALLER SWAP2 POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH2 0x700 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x5D0 JUMPI PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x5 SLOAD SWAP1 POP PUSH2 0x6FF JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x6B8 JUMPI PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP PUSH1 0x5 SLOAD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SUB SWAP1 POP PUSH2 0x6FE JUMP JUMPDEST CALLER SWAP2 POP PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP JUMPDEST JUMPDEST JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP3 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x746 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x7C3 JUMPI INVALID JUMPDEST MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD NUMBER GT PUSH2 0x8B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8C1 JUMPI INVALID JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x8DC JUMPI INVALID JUMPDEST EQ PUSH2 0x8E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE GT PUSH2 0x8FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x6 SLOAD PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD SWAP1 POP PUSH1 0x5 SLOAD DUP2 GT PUSH2 0x950 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x8 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0xA77 JUMPI PUSH2 0xA6C PUSH1 0x6 SLOAD DUP3 ADD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH2 0xB2E JUMP JUMPDEST PUSH2 0xAE6 DUP2 PUSH1 0x6 SLOAD PUSH1 0x8 PUSH1 0x0 PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD ADD PUSH2 0xB37 JUMP JUMPDEST PUSH1 0x5 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 GT PUSH2 0xB48 JUMPI DUP3 SWAP1 POP PUSH2 0xB4C JUMP JUMPDEST DUP2 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0x48 DUP3 SWAP7 EXTCODEHASH 0xC2 CALLVALUE PUSH20 0x9802CFAA955491349DCB96C228B3DC06238E983 0xE9 SLT SHL 0xA6 COINBASE PUSH5 0x736F6C6343 STOP SDIV GT STOP ORIGIN ",
							"sourceMap": "35:3886:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;233:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;233:20:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1294:79;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1294:79:0;;;:::i;:::-;;529:15;;8:9:-1;5:2;;;30:1;27;20:12;5:2;529:15:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2606:1310;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2606:1310:0;;;:::i;:::-;;1381:73;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1381:73:0;;;:::i;:::-;;698:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;698:36:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;698:36:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;348:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;348:25:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;170:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;170:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;99:28;;8:9:-1;5:2;;;30:1;27;20:12;5:2;99:28:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;591:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;591:36:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;386:22;;8:9:-1;5:2;;;30:1;27;20:12;5:2;386:22:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1636:962;;;:::i;:::-;;465:29;;8:9:-1;5:2;;;30:1;27;20:12;5:2;465:29:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;233:20;;;;:::o;1294:79::-;1086:5;;;;;;;;;;;1072:19;;:10;:19;;;1064:28;;;;;;1353:12;1338;;:27;;;;;;;;;;;;;;;;;;;;;;;;1294:79::o;529:15::-;;;;:::o;2606:1310::-;2670:12;2654:28;;;;;;;;:12;;;;;;;;;;;:28;;;;;;;;;2653:60;;;;2703:9;2687:25;;;;;;;;:12;;;;;;;;;;;:25;;;;;;;;;2653:60;:88;;;;2732:8;;2717:12;:23;2653:88;2645:97;;;;;;2776:5;;;;;;;;;;;2762:19;;:10;:19;;;2761:47;;;;2806:1;2787:4;:16;2792:10;2787:16;;;;;;;;;;;;;;;;:20;2761:47;2753:56;;;;;;2822:22;2855:11;2988:12;2972:28;;;;;;;;:12;;;;;;;;;;;:28;;;;;;;;;2969:902;;;3025:10;3016:19;;3059:4;:16;3064:10;3059:16;;;;;;;;;;;;;;;;3050:25;;2969:902;;;3216:5;;;;;;;;;;;3202:19;;:10;:19;;;3199:661;;;3250:5;;;;;;;;;;;3241:14;;3283:17;;3274:26;;3199:661;;;3462:13;;;;;;;;;;;3448:27;;:10;:27;;;3445:400;;;3508:13;;;;;;;;;;;3499:22;;3575:17;;3553:4;:19;3558:13;;;;;;;;;;;3553:19;;;;;;;;;;;;;;;;:39;3544:48;;3445:400;;;3767:10;3758:19;;3809:4;:16;3814:10;3809:16;;;;;;;;;;;;;;;;3800:25;;3445:400;3199:661;2969:902;3883:6;:15;;:23;3899:6;3883:23;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3883:23:0;2606:1310;;:::o;1381:73::-;1086:5;;;;;;;;;;;1072:19;;:10;:19;;;1064:28;;;;;;1437:9;1422:12;;:24;;;;;;;;;;;;;;;;;;;;;;;;1381:73::o;698:36::-;;;;;;;;;;;;;;;;;:::o;348:25::-;;;;;;;;;;;;;:::o;170:22::-;;;;:::o;99:28::-;;;;;;;;;;;;;:::o;591:36::-;;;;;;;;;;;;;:::o;386:22::-;;;;:::o;1636:962::-;1003:5;;;;;;;;;;;989:19;;:10;:19;;;;981:28;;;;;;1170:10;;1157:12;:23;1149:32;;;;;;1786:13;1770:29;;;;;;;;:12;;;;;;;;;;;:29;;;;;;;;;1762:38;;;;;;1913:7;1903:9;:17;1895:26;;;;;;2026:15;2063:3;;2044:4;:16;2049:10;2044:16;;;;;;;;;;;;;;;;:22;2026:40;;2163:17;;2150:10;:30;2142:39;;;;;;2295:10;2276:4;:16;2281:10;2276:16;;;;;;;;;;;;;;;:29;;;;2334:4;:19;2339:13;;;;;;;;;;;2334:19;;;;;;;;;;;;;;;;2323:10;:30;2320:267;;;2389:42;2406:3;;2393:10;:16;2411:4;:19;2416:13;;;;;;;;;;;2411:19;;;;;;;;;;;;;;;;2389:3;:42::i;:::-;2369:17;:62;;;;2320:267;;;2492:42;2496:10;2530:3;;2508:4;:19;2513:13;;;;;;;;;;;2508:19;;;;;;;;;;;;;;;;:25;2492:3;:42::i;:::-;2472:17;:62;;;;2565:10;2549:13;;:26;;;;;;;;;;;;;;;;;;2320:267;1192:1;1636:962::o;465:29::-;;;;:::o;1462:166::-;1512:4;1535:1;1532;:4;1528:93;;1559:1;1552:8;;;;1528:93;1608:1;1601:8;;1462:166;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "590200",
								"executionCost": "103225",
								"totalCost": "693425"
							},
							"external": {
								"auctionState()": "1096",
								"bids(address)": "1280",
								"cancelAuc()": "21924",
								"endAuc()": "21990",
								"end_time()": "1006",
								"highestBid()": "1049",
								"highestBidder()": "1075",
								"highestBindingBid()": "1093",
								"inc()": "1050",
								"owner()": "1120",
								"placeBid()": "70695",
								"start_time()": "1050",
								"withdraw()": "infinite"
							},
							"internal": {
								"min(uint256,uint256)": "64"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 35,
									"end": 3921,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 35,
									"end": 3921,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 35,
									"end": 3921,
									"name": "MSTORE"
								},
								{
									"begin": 743,
									"end": 943,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": 743,
									"end": 943,
									"name": "POP"
								},
								{
									"begin": 783,
									"end": 793,
									"name": "CALLER"
								},
								{
									"begin": 775,
									"end": 780,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 775,
									"end": 780,
									"name": "DUP1"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "EXP"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "DUP2"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "SLOAD"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "DUP2"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "MUL"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "NOT"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "AND"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "DUP4"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "AND"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "MUL"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "OR"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "SWAP1"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "SSTORE"
								},
								{
									"begin": 775,
									"end": 793,
									"name": "POP"
								},
								{
									"begin": 819,
									"end": 832,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 804,
									"end": 816,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 804,
									"end": 816,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "EXP"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "DUP2"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "SLOAD"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "DUP2"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "MUL"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "NOT"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "AND"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "SWAP1"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "DUP4"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "DUP2"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "GT"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "ISZERO"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "PUSH [tag]",
									"value": "4"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "JUMPI"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "INVALID"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "tag",
									"value": "4"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "JUMPDEST"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "MUL"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "OR"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "SWAP1"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "SSTORE"
								},
								{
									"begin": 804,
									"end": 832,
									"name": "POP"
								},
								{
									"begin": 856,
									"end": 868,
									"name": "NUMBER"
								},
								{
									"begin": 843,
									"end": 853,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 843,
									"end": 868,
									"name": "DUP2"
								},
								{
									"begin": 843,
									"end": 868,
									"name": "SWAP1"
								},
								{
									"begin": 843,
									"end": 868,
									"name": "SSTORE"
								},
								{
									"begin": 843,
									"end": 868,
									"name": "POP"
								},
								{
									"begin": 903,
									"end": 909,
									"name": "PUSH",
									"value": "93A80"
								},
								{
									"begin": 890,
									"end": 900,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 890,
									"end": 900,
									"name": "SLOAD"
								},
								{
									"begin": 890,
									"end": 909,
									"name": "ADD"
								},
								{
									"begin": 879,
									"end": 887,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 879,
									"end": 909,
									"name": "DUP2"
								},
								{
									"begin": 879,
									"end": 909,
									"name": "SWAP1"
								},
								{
									"begin": 879,
									"end": 909,
									"name": "SSTORE"
								},
								{
									"begin": 879,
									"end": 909,
									"name": "POP"
								},
								{
									"begin": 926,
									"end": 935,
									"name": "PUSH",
									"value": "6F05B59D3B20000"
								},
								{
									"begin": 920,
									"end": 923,
									"name": "PUSH",
									"value": "6"
								},
								{
									"begin": 920,
									"end": 935,
									"name": "DUP2"
								},
								{
									"begin": 920,
									"end": 935,
									"name": "SWAP1"
								},
								{
									"begin": 920,
									"end": 935,
									"name": "SSTORE"
								},
								{
									"begin": 920,
									"end": 935,
									"name": "POP"
								},
								{
									"begin": 35,
									"end": 3921,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 3921,
									"name": "DUP1"
								},
								{
									"begin": 35,
									"end": 3921,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 35,
									"end": 3921,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 35,
									"end": 3921,
									"name": "CODECOPY"
								},
								{
									"begin": 35,
									"end": 3921,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 35,
									"end": 3921,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158204882963fc2347309802cfaa955491349dcb96c228b3dc06238e983e9121ba64164736f6c63430005110032",
									".code": [
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "MSTORE"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "LT"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "SHR"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "7FB45099"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "GT"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "91F90157"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "GT"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "91F90157"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "D57BDE79"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "ECFC7ECC"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "F5B56C56"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMP"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPDEST"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "7FB45099"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "834EE417"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMP"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPDEST"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "16243356"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "2352F320"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "371303C0"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "3FDCEEFD"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "62EA82DB"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "EQ"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPI"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "JUMPDEST"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "DUP1"
										},
										{
											"begin": 35,
											"end": 3921,
											"name": "REVERT"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "POP"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "MLOAD"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP1"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP3"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "MSTORE"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "ADD"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "POP"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "POP"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "MLOAD"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP1"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SUB"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SWAP1"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "RETURN"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "JUMPDEST"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "POP"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "JUMPDEST"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "STOP"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "MLOAD"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "DUP3"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "MSTORE"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "ADD"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "SWAP2"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "POP"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "MLOAD"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "DUP1"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "SWAP2"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "SUB"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "SWAP1"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "RETURN"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "JUMPDEST"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "POP"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "JUMPDEST"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "STOP"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "JUMPDEST"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "POP"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "JUMPDEST"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "STOP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "32"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "ADD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "AND"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "ADD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP3"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "MLOAD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP3"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "MSTORE"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "ADD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "MLOAD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SUB"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "RETURN"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "36"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "POP"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH [tag]",
											"value": "38"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "MLOAD"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP3"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "GT"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "ISZERO"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMPI"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "INVALID"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "AND"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "MSTORE"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "ADD"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP2"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "POP"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "POP"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "MLOAD"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP2"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SUB"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "RETURN"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "JUMPDEST"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "POP"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH [tag]",
											"value": "41"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "tag",
											"value": "41"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "JUMPDEST"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "MLOAD"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "DUP1"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "DUP3"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "DUP2"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "MSTORE"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "ADD"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "SWAP2"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "POP"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "POP"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "MLOAD"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "DUP1"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "SWAP2"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "SUB"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "SWAP1"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "RETURN"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "POP"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH [tag]",
											"value": "44"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "tag",
											"value": "44"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "MLOAD"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP3"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "AND"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "AND"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP2"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "MSTORE"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "ADD"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP2"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "POP"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "POP"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "MLOAD"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP2"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SUB"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "RETURN"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "46"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "POP"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH [tag]",
											"value": "47"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH [tag]",
											"value": "48"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "tag",
											"value": "47"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "MLOAD"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DUP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DUP3"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "AND"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "AND"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DUP2"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "MSTORE"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "ADD"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP2"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "POP"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "POP"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "MLOAD"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DUP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP2"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SUB"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "RETURN"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "49"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH [tag]",
											"value": "50"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "tag",
											"value": "50"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "MLOAD"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "DUP3"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "SWAP2"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "POP"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "MLOAD"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "SWAP2"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "SUB"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "SWAP1"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "RETURN"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "STOP"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH [tag]",
											"value": "56"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "MLOAD"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "DUP1"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "DUP3"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "MSTORE"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "ADD"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "POP"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "MLOAD"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "DUP1"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "SWAP2"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "SUB"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "SWAP1"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "RETURN"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMPDEST"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "SLOAD"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "DUP2"
										},
										{
											"begin": 233,
											"end": 253,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "JUMPDEST"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP1"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "SWAP1"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "SLOAD"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "SWAP1"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "EXP"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "SWAP1"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DIV"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "AND"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "AND"
										},
										{
											"begin": 1072,
											"end": 1082,
											"name": "CALLER"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "AND"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "EQ"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "REVERT"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "JUMPDEST"
										},
										{
											"begin": 1353,
											"end": 1365,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1338,
											"end": 1350,
											"name": "DUP1"
										},
										{
											"begin": 1338,
											"end": 1350,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "EXP"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "DUP2"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "SLOAD"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "DUP2"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "MUL"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "NOT"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "AND"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "SWAP1"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "DUP4"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "DUP2"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "GT"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "ISZERO"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "JUMPI"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "INVALID"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "JUMPDEST"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "MUL"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "OR"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "SWAP1"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "SSTORE"
										},
										{
											"begin": 1338,
											"end": 1365,
											"name": "POP"
										},
										{
											"begin": 1294,
											"end": 1373,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "JUMPDEST"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "SLOAD"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "DUP2"
										},
										{
											"begin": 529,
											"end": 544,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "JUMPDEST"
										},
										{
											"begin": 2670,
											"end": 2682,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "DUP1"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "DUP2"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "GT"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "ISZERO"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "PUSH [tag]",
											"value": "62"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "JUMPI"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "INVALID"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "tag",
											"value": "62"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "JUMPDEST"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "SWAP1"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "SLOAD"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "SWAP1"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "EXP"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "SWAP1"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "DIV"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2654,
											"end": 2666,
											"name": "AND"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "DUP2"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "GT"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "ISZERO"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "JUMPI"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "INVALID"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "JUMPDEST"
										},
										{
											"begin": 2654,
											"end": 2682,
											"name": "EQ"
										},
										{
											"begin": 2653,
											"end": 2713,
											"name": "DUP1"
										},
										{
											"begin": 2653,
											"end": 2713,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 2653,
											"end": 2713,
											"name": "JUMPI"
										},
										{
											"begin": 2653,
											"end": 2713,
											"name": "POP"
										},
										{
											"begin": 2703,
											"end": 2712,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "DUP2"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "GT"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "ISZERO"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "JUMPI"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "INVALID"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "JUMPDEST"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "SWAP1"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "SLOAD"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "SWAP1"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "EXP"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "SWAP1"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "DIV"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2687,
											"end": 2699,
											"name": "AND"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "DUP2"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "GT"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "ISZERO"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "JUMPI"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "INVALID"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "JUMPDEST"
										},
										{
											"begin": 2687,
											"end": 2712,
											"name": "EQ"
										},
										{
											"begin": 2653,
											"end": 2713,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 2653,
											"end": 2713,
											"name": "JUMPDEST"
										},
										{
											"begin": 2653,
											"end": 2741,
											"name": "DUP1"
										},
										{
											"begin": 2653,
											"end": 2741,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2653,
											"end": 2741,
											"name": "JUMPI"
										},
										{
											"begin": 2653,
											"end": 2741,
											"name": "POP"
										},
										{
											"begin": 2732,
											"end": 2740,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2732,
											"end": 2740,
											"name": "SLOAD"
										},
										{
											"begin": 2717,
											"end": 2729,
											"name": "NUMBER"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "GT"
										},
										{
											"begin": 2653,
											"end": 2741,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2653,
											"end": 2741,
											"name": "JUMPDEST"
										},
										{
											"begin": 2645,
											"end": 2742,
											"name": "PUSH [tag]",
											"value": "68"
										},
										{
											"begin": 2645,
											"end": 2742,
											"name": "JUMPI"
										},
										{
											"begin": 2645,
											"end": 2742,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2742,
											"name": "DUP1"
										},
										{
											"begin": 2645,
											"end": 2742,
											"name": "REVERT"
										},
										{
											"begin": 2645,
											"end": 2742,
											"name": "tag",
											"value": "68"
										},
										{
											"begin": 2645,
											"end": 2742,
											"name": "JUMPDEST"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "DUP1"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "SWAP1"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "SLOAD"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "SWAP1"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "EXP"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "SWAP1"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "DIV"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2776,
											"end": 2781,
											"name": "AND"
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "AND"
										},
										{
											"begin": 2762,
											"end": 2772,
											"name": "CALLER"
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "AND"
										},
										{
											"begin": 2762,
											"end": 2781,
											"name": "EQ"
										},
										{
											"begin": 2761,
											"end": 2808,
											"name": "DUP1"
										},
										{
											"begin": 2761,
											"end": 2808,
											"name": "PUSH [tag]",
											"value": "69"
										},
										{
											"begin": 2761,
											"end": 2808,
											"name": "JUMPI"
										},
										{
											"begin": 2761,
											"end": 2808,
											"name": "POP"
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2787,
											"end": 2791,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2802,
											"name": "CALLER"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "AND"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "AND"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "DUP2"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "MSTORE"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "ADD"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "SWAP1"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "DUP2"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "MSTORE"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "ADD"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "KECCAK256"
										},
										{
											"begin": 2787,
											"end": 2803,
											"name": "SLOAD"
										},
										{
											"begin": 2787,
											"end": 2807,
											"name": "GT"
										},
										{
											"begin": 2761,
											"end": 2808,
											"name": "tag",
											"value": "69"
										},
										{
											"begin": 2761,
											"end": 2808,
											"name": "JUMPDEST"
										},
										{
											"begin": 2753,
											"end": 2809,
											"name": "PUSH [tag]",
											"value": "70"
										},
										{
											"begin": 2753,
											"end": 2809,
											"name": "JUMPI"
										},
										{
											"begin": 2753,
											"end": 2809,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2809,
											"name": "DUP1"
										},
										{
											"begin": 2753,
											"end": 2809,
											"name": "REVERT"
										},
										{
											"begin": 2753,
											"end": 2809,
											"name": "tag",
											"value": "70"
										},
										{
											"begin": 2753,
											"end": 2809,
											"name": "JUMPDEST"
										},
										{
											"begin": 2822,
											"end": 2844,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2866,
											"name": "DUP1"
										},
										{
											"begin": 2988,
											"end": 3000,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "DUP1"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "DUP2"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "GT"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "ISZERO"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "PUSH [tag]",
											"value": "71"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "JUMPI"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "INVALID"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "tag",
											"value": "71"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "JUMPDEST"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "SWAP1"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "SLOAD"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "SWAP1"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "EXP"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "SWAP1"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "DIV"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 2972,
											"end": 2984,
											"name": "AND"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "DUP2"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "GT"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "ISZERO"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "JUMPI"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "INVALID"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "JUMPDEST"
										},
										{
											"begin": 2972,
											"end": 3000,
											"name": "EQ"
										},
										{
											"begin": 2969,
											"end": 3871,
											"name": "ISZERO"
										},
										{
											"begin": 2969,
											"end": 3871,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 2969,
											"end": 3871,
											"name": "JUMPI"
										},
										{
											"begin": 3025,
											"end": 3035,
											"name": "CALLER"
										},
										{
											"begin": 3016,
											"end": 3035,
											"name": "SWAP2"
										},
										{
											"begin": 3016,
											"end": 3035,
											"name": "POP"
										},
										{
											"begin": 3059,
											"end": 3063,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3074,
											"name": "CALLER"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "AND"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "AND"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MSTORE"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "DUP2"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "MSTORE"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "ADD"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "KECCAK256"
										},
										{
											"begin": 3059,
											"end": 3075,
											"name": "SLOAD"
										},
										{
											"begin": 3050,
											"end": 3075,
											"name": "SWAP1"
										},
										{
											"begin": 3050,
											"end": 3075,
											"name": "POP"
										},
										{
											"begin": 2969,
											"end": 3871,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 2969,
											"end": 3871,
											"name": "JUMP"
										},
										{
											"begin": 2969,
											"end": 3871,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 2969,
											"end": 3871,
											"name": "JUMPDEST"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "DUP1"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "SLOAD"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "EXP"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "SWAP1"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "DIV"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3216,
											"end": 3221,
											"name": "AND"
										},
										{
											"begin": 3202,
											"end": 3221,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3202,
											"end": 3221,
											"name": "AND"
										},
										{
											"begin": 3202,
											"end": 3212,
											"name": "CALLER"
										},
										{
											"begin": 3202,
											"end": 3221,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3202,
											"end": 3221,
											"name": "AND"
										},
										{
											"begin": 3202,
											"end": 3221,
											"name": "EQ"
										},
										{
											"begin": 3199,
											"end": 3860,
											"name": "ISZERO"
										},
										{
											"begin": 3199,
											"end": 3860,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3199,
											"end": 3860,
											"name": "JUMPI"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "DUP1"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "SWAP1"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "SLOAD"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "SWAP1"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "EXP"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "SWAP1"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "DIV"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3250,
											"end": 3255,
											"name": "AND"
										},
										{
											"begin": 3241,
											"end": 3255,
											"name": "SWAP2"
										},
										{
											"begin": 3241,
											"end": 3255,
											"name": "POP"
										},
										{
											"begin": 3283,
											"end": 3300,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3283,
											"end": 3300,
											"name": "SLOAD"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "SWAP1"
										},
										{
											"begin": 3274,
											"end": 3300,
											"name": "POP"
										},
										{
											"begin": 3199,
											"end": 3860,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3199,
											"end": 3860,
											"name": "JUMP"
										},
										{
											"begin": 3199,
											"end": 3860,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3199,
											"end": 3860,
											"name": "JUMPDEST"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "SLOAD"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "EXP"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "SWAP1"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "DIV"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3475,
											"name": "AND"
										},
										{
											"begin": 3448,
											"end": 3475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3448,
											"end": 3475,
											"name": "AND"
										},
										{
											"begin": 3448,
											"end": 3458,
											"name": "CALLER"
										},
										{
											"begin": 3448,
											"end": 3475,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3448,
											"end": 3475,
											"name": "AND"
										},
										{
											"begin": 3448,
											"end": 3475,
											"name": "EQ"
										},
										{
											"begin": 3445,
											"end": 3845,
											"name": "ISZERO"
										},
										{
											"begin": 3445,
											"end": 3845,
											"name": "PUSH [tag]",
											"value": "77"
										},
										{
											"begin": 3445,
											"end": 3845,
											"name": "JUMPI"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "SWAP1"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "SLOAD"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "SWAP1"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "EXP"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "SWAP1"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "DIV"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3508,
											"end": 3521,
											"name": "AND"
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "SWAP2"
										},
										{
											"begin": 3499,
											"end": 3521,
											"name": "POP"
										},
										{
											"begin": 3575,
											"end": 3592,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 3575,
											"end": 3592,
											"name": "SLOAD"
										},
										{
											"begin": 3553,
											"end": 3557,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "SWAP1"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "SLOAD"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "SWAP1"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "EXP"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "SWAP1"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "DIV"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3558,
											"end": 3571,
											"name": "AND"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "AND"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "AND"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "DUP2"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "MSTORE"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "ADD"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "SWAP1"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "DUP2"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "MSTORE"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "ADD"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "KECCAK256"
										},
										{
											"begin": 3553,
											"end": 3572,
											"name": "SLOAD"
										},
										{
											"begin": 3553,
											"end": 3592,
											"name": "SUB"
										},
										{
											"begin": 3544,
											"end": 3592,
											"name": "SWAP1"
										},
										{
											"begin": 3544,
											"end": 3592,
											"name": "POP"
										},
										{
											"begin": 3445,
											"end": 3845,
											"name": "PUSH [tag]",
											"value": "78"
										},
										{
											"begin": 3445,
											"end": 3845,
											"name": "JUMP"
										},
										{
											"begin": 3445,
											"end": 3845,
											"name": "tag",
											"value": "77"
										},
										{
											"begin": 3445,
											"end": 3845,
											"name": "JUMPDEST"
										},
										{
											"begin": 3767,
											"end": 3777,
											"name": "CALLER"
										},
										{
											"begin": 3758,
											"end": 3777,
											"name": "SWAP2"
										},
										{
											"begin": 3758,
											"end": 3777,
											"name": "POP"
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3814,
											"end": 3824,
											"name": "CALLER"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "AND"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "AND"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "DUP2"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "MSTORE"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "ADD"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "SWAP1"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "DUP2"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "MSTORE"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "ADD"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "KECCAK256"
										},
										{
											"begin": 3809,
											"end": 3825,
											"name": "SLOAD"
										},
										{
											"begin": 3800,
											"end": 3825,
											"name": "SWAP1"
										},
										{
											"begin": 3800,
											"end": 3825,
											"name": "POP"
										},
										{
											"begin": 3445,
											"end": 3845,
											"name": "tag",
											"value": "78"
										},
										{
											"begin": 3445,
											"end": 3845,
											"name": "JUMPDEST"
										},
										{
											"begin": 3199,
											"end": 3860,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3199,
											"end": 3860,
											"name": "JUMPDEST"
										},
										{
											"begin": 2969,
											"end": 3871,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 2969,
											"end": 3871,
											"name": "JUMPDEST"
										},
										{
											"begin": 3883,
											"end": 3889,
											"name": "DUP2"
										},
										{
											"begin": 3883,
											"end": 3898,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3883,
											"end": 3898,
											"name": "AND"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 3899,
											"end": 3905,
											"name": "DUP3"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "SWAP1"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "DUP2"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "ISZERO"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "MUL"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "SWAP1"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "MLOAD"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "MLOAD"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "DUP1"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "DUP4"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "SUB"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "DUP2"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "DUP6"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "DUP9"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "DUP9"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "CALL"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "SWAP4"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "POP"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "POP"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "POP"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "POP"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "79"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "79"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 3883,
											"end": 3906,
											"name": "POP"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "POP"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "POP"
										},
										{
											"begin": 2606,
											"end": 3916,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "JUMPDEST"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DUP1"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "SWAP1"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "SLOAD"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "SWAP1"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "EXP"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "SWAP1"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "DIV"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1086,
											"end": 1091,
											"name": "AND"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "AND"
										},
										{
											"begin": 1072,
											"end": 1082,
											"name": "CALLER"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "AND"
										},
										{
											"begin": 1072,
											"end": 1091,
											"name": "EQ"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "JUMPI"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "DUP1"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "REVERT"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 1064,
											"end": 1092,
											"name": "JUMPDEST"
										},
										{
											"begin": 1437,
											"end": 1446,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "EXP"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SLOAD"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "MUL"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "NOT"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "AND"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "DUP4"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "DUP2"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "GT"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "ISZERO"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "JUMPI"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "INVALID"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "JUMPDEST"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "MUL"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "OR"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SWAP1"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "SSTORE"
										},
										{
											"begin": 1422,
											"end": 1446,
											"name": "POP"
										},
										{
											"begin": 1381,
											"end": 1454,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "JUMPDEST"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "MSTORE"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "MSTORE"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "KECCAK256"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SWAP1"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "POP"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "SLOAD"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "DUP2"
										},
										{
											"begin": 698,
											"end": 734,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "tag",
											"value": "38"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMPDEST"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SLOAD"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "EXP"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "SWAP1"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DIV"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "AND"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "DUP2"
										},
										{
											"begin": 348,
											"end": 373,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "JUMPDEST"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "SLOAD"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "DUP2"
										},
										{
											"begin": 170,
											"end": 192,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "JUMPDEST"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SLOAD"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "EXP"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "SWAP1"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DIV"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "AND"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "DUP2"
										},
										{
											"begin": 99,
											"end": 127,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "tag",
											"value": "48"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "JUMPDEST"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SLOAD"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "EXP"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "SWAP1"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DIV"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "AND"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "DUP2"
										},
										{
											"begin": 591,
											"end": 627,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "JUMPDEST"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "SLOAD"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 386,
											"end": 408,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "JUMPDEST"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "DUP1"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP1"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SLOAD"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP1"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "EXP"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP1"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "DIV"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "AND"
										},
										{
											"begin": 989,
											"end": 1008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 989,
											"end": 1008,
											"name": "AND"
										},
										{
											"begin": 989,
											"end": 999,
											"name": "CALLER"
										},
										{
											"begin": 989,
											"end": 1008,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 989,
											"end": 1008,
											"name": "AND"
										},
										{
											"begin": 989,
											"end": 1008,
											"name": "EQ"
										},
										{
											"begin": 989,
											"end": 1008,
											"name": "ISZERO"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH [tag]",
											"value": "85"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "JUMPI"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "DUP1"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "REVERT"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "tag",
											"value": "85"
										},
										{
											"begin": 981,
											"end": 1009,
											"name": "JUMPDEST"
										},
										{
											"begin": 1170,
											"end": 1180,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1170,
											"end": 1180,
											"name": "SLOAD"
										},
										{
											"begin": 1157,
											"end": 1169,
											"name": "NUMBER"
										},
										{
											"begin": 1157,
											"end": 1180,
											"name": "GT"
										},
										{
											"begin": 1149,
											"end": 1181,
											"name": "PUSH [tag]",
											"value": "87"
										},
										{
											"begin": 1149,
											"end": 1181,
											"name": "JUMPI"
										},
										{
											"begin": 1149,
											"end": 1181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1149,
											"end": 1181,
											"name": "DUP1"
										},
										{
											"begin": 1149,
											"end": 1181,
											"name": "REVERT"
										},
										{
											"begin": 1149,
											"end": 1181,
											"name": "tag",
											"value": "87"
										},
										{
											"begin": 1149,
											"end": 1181,
											"name": "JUMPDEST"
										},
										{
											"begin": 1786,
											"end": 1799,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "DUP2"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "GT"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "ISZERO"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "PUSH [tag]",
											"value": "89"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "JUMPI"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "INVALID"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "tag",
											"value": "89"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "JUMPDEST"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "SWAP1"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "SLOAD"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "SWAP1"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "EXP"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "SWAP1"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "DIV"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 1770,
											"end": 1782,
											"name": "AND"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "DUP2"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "GT"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "ISZERO"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "PUSH [tag]",
											"value": "90"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "JUMPI"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "INVALID"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "tag",
											"value": "90"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "JUMPDEST"
										},
										{
											"begin": 1770,
											"end": 1799,
											"name": "EQ"
										},
										{
											"begin": 1762,
											"end": 1800,
											"name": "PUSH [tag]",
											"value": "91"
										},
										{
											"begin": 1762,
											"end": 1800,
											"name": "JUMPI"
										},
										{
											"begin": 1762,
											"end": 1800,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1762,
											"end": 1800,
											"name": "DUP1"
										},
										{
											"begin": 1762,
											"end": 1800,
											"name": "REVERT"
										},
										{
											"begin": 1762,
											"end": 1800,
											"name": "tag",
											"value": "91"
										},
										{
											"begin": 1762,
											"end": 1800,
											"name": "JUMPDEST"
										},
										{
											"begin": 1913,
											"end": 1920,
											"name": "PUSH",
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 1903,
											"end": 1912,
											"name": "CALLVALUE"
										},
										{
											"begin": 1903,
											"end": 1920,
											"name": "GT"
										},
										{
											"begin": 1895,
											"end": 1921,
											"name": "PUSH [tag]",
											"value": "92"
										},
										{
											"begin": 1895,
											"end": 1921,
											"name": "JUMPI"
										},
										{
											"begin": 1895,
											"end": 1921,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1921,
											"name": "DUP1"
										},
										{
											"begin": 1895,
											"end": 1921,
											"name": "REVERT"
										},
										{
											"begin": 1895,
											"end": 1921,
											"name": "tag",
											"value": "92"
										},
										{
											"begin": 1895,
											"end": 1921,
											"name": "JUMPDEST"
										},
										{
											"begin": 2026,
											"end": 2041,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2063,
											"end": 2066,
											"name": "SLOAD"
										},
										{
											"begin": 2044,
											"end": 2048,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "CALLER"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "AND"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "AND"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "DUP2"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "MSTORE"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "ADD"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "SWAP1"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "DUP2"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "MSTORE"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "ADD"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "KECCAK256"
										},
										{
											"begin": 2044,
											"end": 2060,
											"name": "SLOAD"
										},
										{
											"begin": 2044,
											"end": 2066,
											"name": "ADD"
										},
										{
											"begin": 2026,
											"end": 2066,
											"name": "SWAP1"
										},
										{
											"begin": 2026,
											"end": 2066,
											"name": "POP"
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2163,
											"end": 2180,
											"name": "SLOAD"
										},
										{
											"begin": 2150,
											"end": 2160,
											"name": "DUP2"
										},
										{
											"begin": 2150,
											"end": 2180,
											"name": "GT"
										},
										{
											"begin": 2142,
											"end": 2181,
											"name": "PUSH [tag]",
											"value": "93"
										},
										{
											"begin": 2142,
											"end": 2181,
											"name": "JUMPI"
										},
										{
											"begin": 2142,
											"end": 2181,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2181,
											"name": "DUP1"
										},
										{
											"begin": 2142,
											"end": 2181,
											"name": "REVERT"
										},
										{
											"begin": 2142,
											"end": 2181,
											"name": "tag",
											"value": "93"
										},
										{
											"begin": 2142,
											"end": 2181,
											"name": "JUMPDEST"
										},
										{
											"begin": 2295,
											"end": 2305,
											"name": "DUP1"
										},
										{
											"begin": 2276,
											"end": 2280,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2281,
											"end": 2291,
											"name": "CALLER"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "AND"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "AND"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "DUP2"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "MSTORE"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "ADD"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "SWAP1"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "DUP2"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "MSTORE"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "ADD"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2276,
											"end": 2292,
											"name": "KECCAK256"
										},
										{
											"begin": 2276,
											"end": 2305,
											"name": "DUP2"
										},
										{
											"begin": 2276,
											"end": 2305,
											"name": "SWAP1"
										},
										{
											"begin": 2276,
											"end": 2305,
											"name": "SSTORE"
										},
										{
											"begin": 2276,
											"end": 2305,
											"name": "POP"
										},
										{
											"begin": 2334,
											"end": 2338,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "SWAP1"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "SLOAD"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "SWAP1"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "EXP"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "SWAP1"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "DIV"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2352,
											"name": "AND"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "AND"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "AND"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "DUP2"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "MSTORE"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "ADD"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "SWAP1"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "DUP2"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "MSTORE"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "ADD"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "KECCAK256"
										},
										{
											"begin": 2334,
											"end": 2353,
											"name": "SLOAD"
										},
										{
											"begin": 2323,
											"end": 2333,
											"name": "DUP2"
										},
										{
											"begin": 2323,
											"end": 2353,
											"name": "LT"
										},
										{
											"begin": 2320,
											"end": 2587,
											"name": "ISZERO"
										},
										{
											"begin": 2320,
											"end": 2587,
											"name": "PUSH [tag]",
											"value": "94"
										},
										{
											"begin": 2320,
											"end": 2587,
											"name": "JUMPI"
										},
										{
											"begin": 2389,
											"end": 2431,
											"name": "PUSH [tag]",
											"value": "95"
										},
										{
											"begin": 2406,
											"end": 2409,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2406,
											"end": 2409,
											"name": "SLOAD"
										},
										{
											"begin": 2393,
											"end": 2403,
											"name": "DUP3"
										},
										{
											"begin": 2393,
											"end": 2409,
											"name": "ADD"
										},
										{
											"begin": 2411,
											"end": 2415,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "SWAP1"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "SLOAD"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "SWAP1"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "EXP"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "SWAP1"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "DIV"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2416,
											"end": 2429,
											"name": "AND"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "AND"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "AND"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "DUP2"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "MSTORE"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "ADD"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "SWAP1"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "DUP2"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "MSTORE"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "ADD"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "KECCAK256"
										},
										{
											"begin": 2411,
											"end": 2430,
											"name": "SLOAD"
										},
										{
											"begin": 2389,
											"end": 2392,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2389,
											"end": 2431,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2389,
											"end": 2431,
											"name": "tag",
											"value": "95"
										},
										{
											"begin": 2389,
											"end": 2431,
											"name": "JUMPDEST"
										},
										{
											"begin": 2369,
											"end": 2386,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "DUP2"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "SWAP1"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "SSTORE"
										},
										{
											"begin": 2369,
											"end": 2431,
											"name": "POP"
										},
										{
											"begin": 2320,
											"end": 2587,
											"name": "PUSH [tag]",
											"value": "97"
										},
										{
											"begin": 2320,
											"end": 2587,
											"name": "JUMP"
										},
										{
											"begin": 2320,
											"end": 2587,
											"name": "tag",
											"value": "94"
										},
										{
											"begin": 2320,
											"end": 2587,
											"name": "JUMPDEST"
										},
										{
											"begin": 2492,
											"end": 2534,
											"name": "PUSH [tag]",
											"value": "98"
										},
										{
											"begin": 2496,
											"end": 2506,
											"name": "DUP2"
										},
										{
											"begin": 2530,
											"end": 2533,
											"name": "PUSH",
											"value": "6"
										},
										{
											"begin": 2530,
											"end": 2533,
											"name": "SLOAD"
										},
										{
											"begin": 2508,
											"end": 2512,
											"name": "PUSH",
											"value": "8"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "SLOAD"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "EXP"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "SWAP1"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "DIV"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2513,
											"end": 2526,
											"name": "AND"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "AND"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "AND"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "MSTORE"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "SWAP1"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "DUP2"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "MSTORE"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "ADD"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "KECCAK256"
										},
										{
											"begin": 2508,
											"end": 2527,
											"name": "SLOAD"
										},
										{
											"begin": 2508,
											"end": 2533,
											"name": "ADD"
										},
										{
											"begin": 2492,
											"end": 2495,
											"name": "PUSH [tag]",
											"value": "96"
										},
										{
											"begin": 2492,
											"end": 2534,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2492,
											"end": 2534,
											"name": "tag",
											"value": "98"
										},
										{
											"begin": 2492,
											"end": 2534,
											"name": "JUMPDEST"
										},
										{
											"begin": 2472,
											"end": 2489,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 2472,
											"end": 2534,
											"name": "DUP2"
										},
										{
											"begin": 2472,
											"end": 2534,
											"name": "SWAP1"
										},
										{
											"begin": 2472,
											"end": 2534,
											"name": "SSTORE"
										},
										{
											"begin": 2472,
											"end": 2534,
											"name": "POP"
										},
										{
											"begin": 2565,
											"end": 2575,
											"name": "CALLER"
										},
										{
											"begin": 2549,
											"end": 2562,
											"name": "PUSH",
											"value": "7"
										},
										{
											"begin": 2549,
											"end": 2562,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "EXP"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "SLOAD"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "DUP2"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "MUL"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "NOT"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "AND"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "SWAP1"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "DUP4"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "AND"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "MUL"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "OR"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "SWAP1"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "SSTORE"
										},
										{
											"begin": 2549,
											"end": 2575,
											"name": "POP"
										},
										{
											"begin": 2320,
											"end": 2587,
											"name": "tag",
											"value": "97"
										},
										{
											"begin": 2320,
											"end": 2587,
											"name": "JUMPDEST"
										},
										{
											"begin": 1192,
											"end": 1193,
											"name": "POP"
										},
										{
											"begin": 1636,
											"end": 2598,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "tag",
											"value": "56"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "JUMPDEST"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "PUSH",
											"value": "5"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "SLOAD"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "DUP2"
										},
										{
											"begin": 465,
											"end": 494,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 1462,
											"end": 1628,
											"name": "tag",
											"value": "96"
										},
										{
											"begin": 1462,
											"end": 1628,
											"name": "JUMPDEST"
										},
										{
											"begin": 1512,
											"end": 1516,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1536,
											"name": "DUP2"
										},
										{
											"begin": 1532,
											"end": 1533,
											"name": "DUP4"
										},
										{
											"begin": 1532,
											"end": 1536,
											"name": "GT"
										},
										{
											"begin": 1528,
											"end": 1621,
											"name": "PUSH [tag]",
											"value": "100"
										},
										{
											"begin": 1528,
											"end": 1621,
											"name": "JUMPI"
										},
										{
											"begin": 1559,
											"end": 1560,
											"name": "DUP3"
										},
										{
											"begin": 1552,
											"end": 1560,
											"name": "SWAP1"
										},
										{
											"begin": 1552,
											"end": 1560,
											"name": "POP"
										},
										{
											"begin": 1552,
											"end": 1560,
											"name": "PUSH [tag]",
											"value": "99"
										},
										{
											"begin": 1552,
											"end": 1560,
											"name": "JUMP"
										},
										{
											"begin": 1528,
											"end": 1621,
											"name": "tag",
											"value": "100"
										},
										{
											"begin": 1528,
											"end": 1621,
											"name": "JUMPDEST"
										},
										{
											"begin": 1608,
											"end": 1609,
											"name": "DUP2"
										},
										{
											"begin": 1601,
											"end": 1609,
											"name": "SWAP1"
										},
										{
											"begin": 1601,
											"end": 1609,
											"name": "POP"
										},
										{
											"begin": 1462,
											"end": 1628,
											"name": "tag",
											"value": "99"
										},
										{
											"begin": 1462,
											"end": 1628,
											"name": "JUMPDEST"
										},
										{
											"begin": 1462,
											"end": 1628,
											"name": "SWAP3"
										},
										{
											"begin": 1462,
											"end": 1628,
											"name": "SWAP2"
										},
										{
											"begin": 1462,
											"end": 1628,
											"name": "POP"
										},
										{
											"begin": 1462,
											"end": 1628,
											"name": "POP"
										},
										{
											"begin": 1462,
											"end": 1628,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"auctionState()": "7fb45099",
							"bids(address)": "62ea82db",
							"cancelAuc()": "2352f320",
							"endAuc()": "3fdceefd",
							"end_time()": "16243356",
							"highestBid()": "d57bde79",
							"highestBidder()": "91f90157",
							"highestBindingBid()": "f5b56c56",
							"inc()": "371303c0",
							"owner()": "8da5cb5b",
							"placeBid()": "ecfc7ecc",
							"start_time()": "834ee417",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.17+commit.d19bba13\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":true,\"inputs\":[],\"name\":\"auctionState\",\"outputs\":[{\"internalType\":\"enum Auction.state\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"bids\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"cancelAuc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"endAuc\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"end_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestBidder\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"highestBindingBid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"inc\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"placeBid\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"start_time\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/Auction.sol\":\"Auction\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Auction.sol\":{\"keccak256\":\"0xa84d447c1b570a166eff0a48be4113d6c6d2bf3bd2660ee0182c788ec40bec2e\",\"urls\":[\"bzz-raw://38d09e6f0e7f878d10eb8a78d507dfe8fad1cc142aee9f060f49ccdb8dabd058\",\"dweb:/ipfs/QmSVHKwv5FVqc7yA5ohg3V8oPp6KcDXkMNDaMzqcy6Mghp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "contracts/Auction.sol:Auction",
								"label": "owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address_payable"
							},
							{
								"astId": 5,
								"contract": "contracts/Auction.sol:Auction",
								"label": "start_time",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 7,
								"contract": "contracts/Auction.sol:Auction",
								"label": "end_time",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 14,
								"contract": "contracts/Auction.sol:Auction",
								"label": "auctionState",
								"offset": 0,
								"slot": "3",
								"type": "t_enum(state)12"
							},
							{
								"astId": 16,
								"contract": "contracts/Auction.sol:Auction",
								"label": "highestBid",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 18,
								"contract": "contracts/Auction.sol:Auction",
								"label": "highestBindingBid",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 20,
								"contract": "contracts/Auction.sol:Auction",
								"label": "inc",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 22,
								"contract": "contracts/Auction.sol:Auction",
								"label": "highestBidder",
								"offset": 0,
								"slot": "7",
								"type": "t_address_payable"
							},
							{
								"astId": 26,
								"contract": "contracts/Auction.sol:Auction",
								"label": "bids",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_enum(state)12": {
								"encoding": "inplace",
								"label": "enum Auction.state",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/Auction.sol": {
				"ast": {
					"absolutePath": "contracts/Auction.sol",
					"exportedSymbols": {
						"Auction": [
							338
						]
					},
					"id": 339,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:31:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 338,
							"linearizedBaseContracts": [
								338
							],
							"name": "Auction",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "99:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "99:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 5,
									"name": "start_time",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "170:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 4,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "170:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 7,
									"name": "end_time",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "233:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "233:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"canonicalName": "Auction.state",
									"id": 12,
									"members": [
										{
											"id": 8,
											"name": "Start",
											"nodeType": "EnumValue",
											"src": "314:5:0"
										},
										{
											"id": 9,
											"name": "Running",
											"nodeType": "EnumValue",
											"src": "321:7:0"
										},
										{
											"id": 10,
											"name": "End",
											"nodeType": "EnumValue",
											"src": "330:3:0"
										},
										{
											"id": 11,
											"name": "Cancel",
											"nodeType": "EnumValue",
											"src": "335:6:0"
										}
									],
									"name": "state",
									"nodeType": "EnumDefinition",
									"src": "302:40:0"
								},
								{
									"constant": false,
									"id": 14,
									"name": "auctionState",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "348:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_enum$_state_$12",
										"typeString": "enum Auction.state"
									},
									"typeName": {
										"contractScope": null,
										"id": 13,
										"name": "state",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 12,
										"src": "348:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_enum$_state_$12",
											"typeString": "enum Auction.state"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 16,
									"name": "highestBid",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "386:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 15,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "386:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 18,
									"name": "highestBindingBid",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "465:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 17,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "465:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 20,
									"name": "inc",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "529:15:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 19,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "529:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 22,
									"name": "highestBidder",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "591:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address_payable",
										"typeString": "address payable"
									},
									"typeName": {
										"id": 21,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "591:15:0",
										"stateMutability": "payable",
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 26,
									"name": "bids",
									"nodeType": "VariableDeclaration",
									"scope": 338,
									"src": "698:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 25,
										"keyType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "706:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "698:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 24,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "717:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "764:179:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 32,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 29,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "775:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 30,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 353,
															"src": "783:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 31,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "783:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "775:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"id": 33,
												"nodeType": "ExpressionStatement",
												"src": "775:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 34,
														"name": "auctionState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "804:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 35,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "819:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																"typeString": "type(enum Auction.state)"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Running",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "819:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"src": "804:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_state_$12",
														"typeString": "enum Auction.state"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "804:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 39,
														"name": "start_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "843:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 40,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "856:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 41,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "856:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "843:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "843:25:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 44,
														"name": "end_time",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "879:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 45,
															"name": "start_time",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "890:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "363034383030",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "903:6:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_604800_by_1",
																"typeString": "int_const 604800"
															},
															"value": "604800"
														},
														"src": "890:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "879:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "879:30:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "inc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "920:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "302e35",
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "926:9:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_500000000000000000_by_1",
															"typeString": "int_const 500000000000000000"
														},
														"value": "0.5"
													},
													"src": "920:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "920:15:0"
											}
										]
									},
									"documentation": null,
									"id": 55,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "754:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "764:0:0"
									},
									"scope": 338,
									"src": "743:200:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 65,
										"nodeType": "Block",
										"src": "970:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 61,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 58,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "989:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 59,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "989:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 60,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1003:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "989:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 57,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															356,
															357
														],
														"referencedDeclaration": 356,
														"src": "981:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 62,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "981:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 63,
												"nodeType": "ExpressionStatement",
												"src": "981:28:0"
											},
											{
												"id": 64,
												"nodeType": "PlaceholderStatement",
												"src": "1020:1:0"
											}
										]
									},
									"documentation": null,
									"id": 66,
									"name": "notOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:0"
									},
									"src": "951:78:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1053:59:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 69,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "1072:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 70,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1072:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 71,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3,
																"src": "1086:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1072:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															356,
															357
														],
														"referencedDeclaration": 356,
														"src": "1064:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 73,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1064:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 74,
												"nodeType": "ExpressionStatement",
												"src": "1064:28:0"
											},
											{
												"id": 75,
												"nodeType": "PlaceholderStatement",
												"src": "1103:1:0"
											}
										]
									},
									"documentation": null,
									"id": 77,
									"name": "Owner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1051:2:0"
									},
									"src": "1037:75:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "1138:63:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 80,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "1157:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1157:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 82,
																"name": "start_time",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 5,
																"src": "1170:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1157:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 79,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															356,
															357
														],
														"referencedDeclaration": 356,
														"src": "1149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1149:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "1149:32:0"
											},
											{
												"id": 86,
												"nodeType": "PlaceholderStatement",
												"src": "1192:1:0"
											}
										]
									},
									"documentation": null,
									"id": 88,
									"name": "started",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1136:2:0"
									},
									"src": "1120:81:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 98,
										"nodeType": "Block",
										"src": "1225:61:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 91,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 343,
																	"src": "1244:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1244:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"argumentTypes": null,
																"id": 93,
																"name": "end_time",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 7,
																"src": "1257:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1244:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 90,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															356,
															357
														],
														"referencedDeclaration": 356,
														"src": "1236:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1236:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "1236:30:0"
											},
											{
												"id": 97,
												"nodeType": "PlaceholderStatement",
												"src": "1277:1:0"
											}
										]
									},
									"documentation": null,
									"id": 99,
									"name": "ended",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1223:2:0"
									},
									"src": "1209:77:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 109,
										"nodeType": "Block",
										"src": "1327:46:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 104,
														"name": "auctionState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1338:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 105,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1353:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																"typeString": "type(enum Auction.state)"
															}
														},
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Cancel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1353:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"src": "1338:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_state_$12",
														"typeString": "enum Auction.state"
													}
												},
												"id": 108,
												"nodeType": "ExpressionStatement",
												"src": "1338:27:0"
											}
										]
									},
									"documentation": null,
									"id": 110,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 102,
											"modifierName": {
												"argumentTypes": null,
												"id": 101,
												"name": "Owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 77,
												"src": "1322:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1322:5:0"
										}
									],
									"name": "cancelAuc",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1312:2:0"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1327:0:0"
									},
									"scope": 338,
									"src": "1294:79:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 120,
										"nodeType": "Block",
										"src": "1411:43:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 115,
														"name": "auctionState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1422:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 116,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "1437:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																"typeString": "type(enum Auction.state)"
															}
														},
														"id": 117,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "End",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "1437:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"src": "1422:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_state_$12",
														"typeString": "enum Auction.state"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "1422:24:0"
											}
										]
									},
									"documentation": null,
									"id": 121,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 113,
											"modifierName": {
												"argumentTypes": null,
												"id": 112,
												"name": "Owner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 77,
												"src": "1406:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1406:5:0"
										}
									],
									"name": "endAuc",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1396:2:0"
									},
									"returnParameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1411:0:0"
									},
									"scope": 338,
									"src": "1381:73:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "1517:111:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 130,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "1532:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"argumentTypes": null,
														"id": 131,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 125,
														"src": "1535:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1532:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 138,
													"nodeType": "Block",
													"src": "1586:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 136,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 125,
																"src": "1608:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 129,
															"id": 137,
															"nodeType": "Return",
															"src": "1601:8:0"
														}
													]
												},
												"id": 139,
												"nodeType": "IfStatement",
												"src": "1528:93:0",
												"trueBody": {
													"id": 135,
													"nodeType": "Block",
													"src": "1537:35:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 133,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 123,
																"src": "1559:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 129,
															"id": 134,
															"nodeType": "Return",
															"src": "1552:8:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1475:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1475:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1483:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 124,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1483:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1474:16:0"
									},
									"returnParameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 128,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "1512:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 127,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1512:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1511:6:0"
									},
									"scope": 338,
									"src": "1462:166:0",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "1687:911:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_enum$_state_$12",
																"typeString": "enum Auction.state"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 149,
																"name": "auctionState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "1770:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_state_$12",
																	"typeString": "enum Auction.state"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 150,
																	"name": "state",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 12,
																	"src": "1786:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																		"typeString": "type(enum Auction.state)"
																	}
																},
																"id": 151,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "Running",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1786:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_state_$12",
																	"typeString": "enum Auction.state"
																}
															},
															"src": "1770:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															356,
															357
														],
														"referencedDeclaration": 356,
														"src": "1762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1762:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 154,
												"nodeType": "ExpressionStatement",
												"src": "1762:38:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 156,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 353,
																	"src": "1903:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 157,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1903:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1913:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "1903:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 155,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															356,
															357
														],
														"referencedDeclaration": 356,
														"src": "1895:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 160,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 161,
												"nodeType": "ExpressionStatement",
												"src": "1895:26:0"
											},
											{
												"assignments": [
													163
												],
												"declarations": [
													{
														"constant": false,
														"id": 163,
														"name": "currentbid",
														"nodeType": "VariableDeclaration",
														"scope": 219,
														"src": "2026:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 162,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 164,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2044:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 167,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 165,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "2049:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2049:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2044:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 168,
														"name": "inc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 20,
														"src": "2063:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2044:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2026:40:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 172,
																"name": "currentbid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 163,
																"src": "2150:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 173,
																"name": "highestBindingBid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "2163:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2150:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															356,
															357
														],
														"referencedDeclaration": 356,
														"src": "2142:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2142:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 176,
												"nodeType": "ExpressionStatement",
												"src": "2142:39:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 177,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2276:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 180,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 178,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 353,
																"src": "2281:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2281:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2276:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 181,
														"name": "currentbid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2295:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2276:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "2276:29:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 184,
														"name": "currentbid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 163,
														"src": "2323:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 185,
															"name": "bids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 26,
															"src": "2334:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 187,
														"indexExpression": {
															"argumentTypes": null,
															"id": 186,
															"name": "highestBidder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 22,
															"src": "2339:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "2334:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2323:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 217,
													"nodeType": "Block",
													"src": "2457:130:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 201,
																	"name": "highestBindingBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2472:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 203,
																			"name": "currentbid",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 163,
																			"src": "2496:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 208,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 204,
																					"name": "bids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 26,
																					"src": "2508:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 206,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 205,
																					"name": "highestBidder",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 22,
																					"src": "2513:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2508:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 207,
																				"name": "inc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "2530:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2508:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 202,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 141,
																		"src": "2492:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2492:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2472:62:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 211,
															"nodeType": "ExpressionStatement",
															"src": "2472:62:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 212,
																	"name": "highestBidder",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "2549:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 213,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "2565:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2565:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "2549:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 216,
															"nodeType": "ExpressionStatement",
															"src": "2549:26:0"
														}
													]
												},
												"id": 218,
												"nodeType": "IfStatement",
												"src": "2320:267:0",
												"trueBody": {
													"id": 200,
													"nodeType": "Block",
													"src": "2354:89:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 189,
																	"name": "highestBindingBid",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2369:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 191,
																				"name": "currentbid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 163,
																				"src": "2393:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 192,
																				"name": "inc",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 20,
																				"src": "2406:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2393:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 194,
																				"name": "bids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "2411:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 196,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 195,
																				"name": "highestBidder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "2416:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2411:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 190,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 141,
																		"src": "2389:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2389:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2369:62:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 199,
															"nodeType": "ExpressionStatement",
															"src": "2369:62:0"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 144,
											"modifierName": {
												"argumentTypes": null,
												"id": 143,
												"name": "notOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 66,
												"src": "1671:8:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1671:8:0"
										},
										{
											"arguments": null,
											"id": 146,
											"modifierName": {
												"argumentTypes": null,
												"id": 145,
												"name": "started",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 88,
												"src": "1680:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1680:7:0"
										}
									],
									"name": "placeBid",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1653:2:0"
									},
									"returnParameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1687:0:0"
									},
									"scope": 338,
									"src": "1636:962:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "2632:1284:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 234,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_enum$_state_$12",
																				"typeString": "enum Auction.state"
																			},
																			"id": 227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 224,
																				"name": "auctionState",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "2654:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_state_$12",
																					"typeString": "enum Auction.state"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 225,
																					"name": "state",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 12,
																					"src": "2670:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																						"typeString": "type(enum Auction.state)"
																					}
																				},
																				"id": 226,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "Cancel",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2670:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_state_$12",
																					"typeString": "enum Auction.state"
																				}
																			},
																			"src": "2654:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 228,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2653:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"argumentTypes": null,
																	"components": [
																		{
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_enum$_state_$12",
																				"typeString": "enum Auction.state"
																			},
																			"id": 232,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 229,
																				"name": "auctionState",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 14,
																				"src": "2687:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_state_$12",
																					"typeString": "enum Auction.state"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 230,
																					"name": "state",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 12,
																					"src": "2703:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																						"typeString": "type(enum Auction.state)"
																					}
																				},
																				"id": 231,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "End",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2703:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_enum$_state_$12",
																					"typeString": "enum Auction.state"
																				}
																			},
																			"src": "2687:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 233,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2686:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2653:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 235,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 343,
																				"src": "2717:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "2717:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 237,
																			"name": "end_time",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 7,
																			"src": "2732:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2717:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 239,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2716:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2653:88:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															356,
															357
														],
														"referencedDeclaration": 356,
														"src": "2645:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2645:97:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2645:97:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		},
																		"id": 247,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 244,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 353,
																				"src": "2762:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "2762:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"id": 246,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3,
																			"src": "2776:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"src": "2762:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 248,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2761:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 254,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 249,
																				"name": "bids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 26,
																				"src": "2787:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 252,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 250,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 353,
																					"src": "2792:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 251,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "2792:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2787:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 253,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2806:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "2787:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 255,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2786:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2761:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 243,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															356,
															357
														],
														"referencedDeclaration": 356,
														"src": "2753:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2753:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 258,
												"nodeType": "ExpressionStatement",
												"src": "2753:56:0"
											},
											{
												"assignments": [
													260
												],
												"declarations": [
													{
														"constant": false,
														"id": 260,
														"name": "person",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "2822:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 259,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2822:15:0",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2822:22:0"
											},
											{
												"assignments": [
													263
												],
												"declarations": [
													{
														"constant": false,
														"id": 263,
														"name": "amount",
														"nodeType": "VariableDeclaration",
														"scope": 336,
														"src": "2855:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 262,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2855:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 264,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "2855:11:0"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_enum$_state_$12",
														"typeString": "enum Auction.state"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 265,
														"name": "auctionState",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "2972:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 266,
															"name": "state",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 12,
															"src": "2988:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_state_$12_$",
																"typeString": "type(enum Auction.state)"
															}
														},
														"id": 267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "Cancel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2988:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_state_$12",
															"typeString": "enum Auction.state"
														}
													},
													"src": "2972:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 328,
													"nodeType": "Block",
													"src": "3103:768:0",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 282,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "3202:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 283,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3202:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 284,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3,
																	"src": "3216:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3202:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 326,
																"nodeType": "Block",
																"src": "3334:526:0",
																"statements": [
																	{
																		"condition": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			},
																			"id": 298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 295,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 353,
																					"src": "3448:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 296,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3448:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 297,
																				"name": "highestBidder",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "3462:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"src": "3448:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 324,
																			"nodeType": "Block",
																			"src": "3735:110:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 315,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 312,
																							"name": "person",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 260,
																							"src": "3758:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"expression": {
																								"argumentTypes": null,
																								"id": 313,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 353,
																								"src": "3767:3:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 314,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "3767:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"src": "3758:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"id": 316,
																					"nodeType": "ExpressionStatement",
																					"src": "3758:19:0"
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 322,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 317,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 263,
																							"src": "3800:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"baseExpression": {
																								"argumentTypes": null,
																								"id": 318,
																								"name": "bids",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 26,
																								"src": "3809:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																									"typeString": "mapping(address => uint256)"
																								}
																							},
																							"id": 321,
																							"indexExpression": {
																								"argumentTypes": null,
																								"expression": {
																									"argumentTypes": null,
																									"id": 319,
																									"name": "msg",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 353,
																									"src": "3814:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_message",
																										"typeString": "msg"
																									}
																								},
																								"id": 320,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "sender",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "3814:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address_payable",
																									"typeString": "address payable"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3809:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3800:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 323,
																					"nodeType": "ExpressionStatement",
																					"src": "3800:25:0"
																				}
																			]
																		},
																		"id": 325,
																		"nodeType": "IfStatement",
																		"src": "3445:400:0",
																		"trueBody": {
																			"id": 311,
																			"nodeType": "Block",
																			"src": "3476:150:0",
																			"statements": [
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 301,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 299,
																							"name": "person",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 260,
																							"src": "3499:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"id": 300,
																							"name": "highestBidder",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 22,
																							"src": "3508:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address_payable",
																								"typeString": "address payable"
																							}
																						},
																						"src": "3499:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address_payable",
																							"typeString": "address payable"
																						}
																					},
																					"id": 302,
																					"nodeType": "ExpressionStatement",
																					"src": "3499:22:0"
																				},
																				{
																					"expression": {
																						"argumentTypes": null,
																						"id": 309,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"argumentTypes": null,
																							"id": 303,
																							"name": "amount",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 263,
																							"src": "3544:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"argumentTypes": null,
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 308,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"argumentTypes": null,
																								"baseExpression": {
																									"argumentTypes": null,
																									"id": 304,
																									"name": "bids",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 26,
																									"src": "3553:4:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																										"typeString": "mapping(address => uint256)"
																									}
																								},
																								"id": 306,
																								"indexExpression": {
																									"argumentTypes": null,
																									"id": 305,
																									"name": "highestBidder",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 22,
																									"src": "3558:13:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								},
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "IndexAccess",
																								"src": "3553:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "-",
																							"rightExpression": {
																								"argumentTypes": null,
																								"id": 307,
																								"name": "highestBindingBid",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 18,
																								"src": "3575:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "3553:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3544:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 310,
																					"nodeType": "ExpressionStatement",
																					"src": "3544:48:0"
																				}
																			]
																		}
																	}
																]
															},
															"id": 327,
															"nodeType": "IfStatement",
															"src": "3199:661:0",
															"trueBody": {
																"id": 294,
																"nodeType": "Block",
																"src": "3222:94:0",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 286,
																				"name": "person",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 260,
																				"src": "3241:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 287,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3,
																				"src": "3250:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"src": "3241:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"id": 289,
																		"nodeType": "ExpressionStatement",
																		"src": "3241:14:0"
																	},
																	{
																		"expression": {
																			"argumentTypes": null,
																			"id": 292,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"argumentTypes": null,
																				"id": 290,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "3274:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"argumentTypes": null,
																				"id": 291,
																				"name": "highestBindingBid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 18,
																				"src": "3283:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3274:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 293,
																		"nodeType": "ExpressionStatement",
																		"src": "3274:26:0"
																	}
																]
															}
														}
													]
												},
												"id": 329,
												"nodeType": "IfStatement",
												"src": "2969:902:0",
												"trueBody": {
													"id": 281,
													"nodeType": "Block",
													"src": "3001:86:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 269,
																	"name": "person",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 260,
																	"src": "3016:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 270,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 353,
																		"src": "3025:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3025:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3016:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 273,
															"nodeType": "ExpressionStatement",
															"src": "3016:19:0"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"id": 274,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 263,
																	"src": "3050:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"id": 275,
																		"name": "bids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 26,
																		"src": "3059:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 278,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 276,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 353,
																			"src": "3064:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3064:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3059:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3050:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 280,
															"nodeType": "ExpressionStatement",
															"src": "3050:25:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 333,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "3899:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 330,
															"name": "person",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "3883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "3883:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3883:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "3883:23:0"
											}
										]
									},
									"documentation": null,
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2623:2:0"
									},
									"returnParameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2632:0:0"
									},
									"scope": 338,
									"src": "2606:1310:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 339,
							"src": "35:3886:0"
						}
					],
					"src": "0:3921:0"
				},
				"id": 0
			}
		}
	}
}